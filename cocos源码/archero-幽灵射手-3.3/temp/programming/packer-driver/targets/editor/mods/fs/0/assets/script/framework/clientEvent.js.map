{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/framework/clientEvent.ts"],"names":["_decorator","ccclass","property","clientEvent","on","eventName","handler","target","objHandler","handlerList","_handlers","i","length","push","off","oldObj","splice","dispatchEvent","args","args1","arguments","apply"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBF,U;;6BAGjBG,W,WADZF,OAAO,CAAC,aAAD,C,mCAAR,MACaE,WADb,CACyB;AAGrB;AACJ;AACA;AACA;AACA;AACA;AACoB,eAAFC,EAAE,CAAEC,SAAF,EAAqBC,OAArB,EAAwCC,MAAxC,EAAqD;AACjE,cAAIC,UAAc,GAAG;AAACF,YAAAA,OAAO,EAAEA,OAAV;AAAmBC,YAAAA,MAAM,EAAEA;AAA3B,WAArB;AACA,cAAIE,WAAuB,GAAGN,WAAW,CAACO,SAAZ,CAAsBL,SAAtB,CAA9B;;AACA,cAAI,CAACI,WAAL,EAAkB;AACdA,YAAAA,WAAW,GAAG,EAAd;AACAN,YAAAA,WAAW,CAACO,SAAZ,CAAsBL,SAAtB,IAAmCI,WAAnC;AACH;;AAED,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,gBAAI,CAACF,WAAW,CAACE,CAAD,CAAhB,EAAqB;AACjBF,cAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBH,UAAjB;AACA,qBAAOG,CAAP;AACH;AACJ;;AAEDF,UAAAA,WAAW,CAACI,IAAZ,CAAiBL,UAAjB;AAEA,iBAAOC,WAAW,CAACG,MAAnB;AACH;;AAED;AACJ;AACA;AACA;AACA;AACA;AACqB,eAAHE,GAAG,CAAET,SAAF,EAAqBC,OAArB,EAAwCC,MAAxC,EAAqD;AAClE,cAAIE,WAAW,GAAGN,WAAW,CAACO,SAAZ,CAAsBL,SAAtB,CAAlB;;AAEA,cAAI,CAACI,WAAL,EAAkB;AACd;AACH;;AAED,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAAW,CAACG,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,gBAAII,MAAM,GAAGN,WAAW,CAACE,CAAD,CAAxB;;AACA,gBAAII,MAAM,CAACT,OAAP,KAAmBA,OAAnB,KAA+B,CAACC,MAAD,IAAWA,MAAM,KAAKQ,MAAM,CAACR,MAA5D,CAAJ,EAAyE;AACrEE,cAAAA,WAAW,CAACO,MAAZ,CAAmBL,CAAnB,EAAsB,CAAtB;AACA;AACH;AACJ;AACJ;;AAED;AACJ;AACA;AACA;AACA;AAC+B,eAAbM,aAAa,CAAEZ,SAAF,EAAqB,GAAGa,IAAxB,EAAmC;AAC1D,cAAIT,WAAW,GAAGN,WAAW,CAACO,SAAZ,CAAsBL,SAAtB,CAAlB;AAEA,cAAIc,KAAK,GAAG,EAAZ;AACA,cAAIR,CAAJ;;AACA,eAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGS,SAAS,CAACR,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCQ,YAAAA,KAAK,CAACN,IAAN,CAAWO,SAAS,CAACT,CAAD,CAApB;AACH;;AAED,cAAI,CAACF,WAAL,EAAkB;AACd;AACH;;AAED,eAAKE,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,WAAW,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,gBAAIH,UAAU,GAAGC,WAAW,CAACE,CAAD,CAA5B;;AACA,gBAAIH,UAAU,CAACF,OAAf,EAAwB;AACpBE,cAAAA,UAAU,CAACF,OAAX,CAAmBe,KAAnB,CAAyBb,UAAU,CAACD,MAApC,EAA4CY,KAA5C;AACH;AACJ;AACJ;;AA3EoB,O,wCACgC,E","sourcesContent":["import { _decorator } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"clientEvent\")\nexport class clientEvent {\n    private static _handlers: { [key: string]: any[] } = {};\n\n    /**\n     * 监听事件\n     * @param {string} eventName 事件名称\n     * @param {function} handler 监听函数\n     * @param {object} target 监听目标\n     */\n    public static on (eventName: string, handler: Function, target: any) {\n        var objHandler: {} = {handler: handler, target: target};\n        var handlerList: Array<any> = clientEvent._handlers[eventName];\n        if (!handlerList) {\n            handlerList = [];\n            clientEvent._handlers[eventName] = handlerList;\n        }\n\n        for (var i = 0; i < handlerList.length; i++) {\n            if (!handlerList[i]) {\n                handlerList[i] = objHandler;\n                return i;\n            }\n        }\n\n        handlerList.push(objHandler);\n\n        return handlerList.length;\n    };\n\n    /**\n     * 取消监听\n     * @param {string} eventName 监听事件\n     * @param {function} handler 监听函数\n     * @param {object} target 监听目标\n     */\n    public static off (eventName: string, handler: Function, target: any) {\n        var handlerList = clientEvent._handlers[eventName];\n\n        if (!handlerList) {\n            return;\n        }\n\n        for (var i = 0; i < handlerList.length; i++) {\n            var oldObj = handlerList[i];\n            if (oldObj.handler === handler && (!target || target === oldObj.target)) {\n                handlerList.splice(i, 1);\n                break;\n            }\n        }\n    };\n\n    /**\n     * 分发事件\n     * @param {string} eventName 分发事件名\n     * @param  {...any} params 分发事件参数\n     */\n    public static dispatchEvent (eventName: string, ...args: any) {\n        var handlerList = clientEvent._handlers[eventName];\n\n        var args1 = [];\n        var i;\n        for (i = 1; i < arguments.length; i++) {\n            args1.push(arguments[i]);\n        }\n\n        if (!handlerList) {\n            return;\n        }\n\n        for (i = 0; i < handlerList.length; i++) {\n            var objHandler = handlerList[i];\n            if (objHandler.handler) {\n                objHandler.handler.apply(objHandler.target, args1);\n            }\n        }\n    };\n}\n"]}