{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/ui/fight/playerBloodBar.ts"],"names":["_decorator","Component","Node","SpriteFrame","Prefab","LayoutComponent","Vec3","find","UITransformComponent","SpriteComponent","tween","clamp","constant","GameManager","poolManager","ccclass","property","PlayerBloodBar","start","show","scriptParent","totalBlood","offsetPos","scale","callback","isInit","_scriptParent","_totalBlood","_offsetPos","_scale","_ndTarget","node","setScale","_curBlood","bloodItemNum","Math","ceil","_maxItemBlood","_bloodBarWidth","_minBloodBarItemWidth","isOutOfRange","_minBloodBarWidth","_oriContainerPos","set","ndContainer","position","_curContainerPos","y","setPosition","layoutContainer","spacingX","children","forEach","item","active","ratio","UIComBloodBar","setContentSize","_bloodBarHeight","priority","PRIORITY","BLOOD","i","ndLineItem","length","instance","getNode","pbLine","UICom","getComponent","layCom","updateLayout","spComLine","x","enabled","UIComWhiteBar","_whiteBarPos","z","ndWhiteBar","UIComCurBloodBar","_bloodBarPos","ndCurBloodBar","refreshBlood","num","isIncreaseLimit","ndChild","to","width","call","isDie","update","deltaTime","parent","mainCamera","convertToUINode","worldPosition","_curPos","add"],"mappings":"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","sourcesContent":["import { constant } from './../../framework/constant';\nimport { GameManager } from './../../fight/gameManager';\nimport { poolManager } from './../../framework/poolManager';\nimport { _decorator, Component, Node, SpriteFrame, Prefab, LayoutComponent, Vec3, find, UITransformComponent, SpriteComponent, tween, clamp } from 'cc';\n//血条组件\n\nconst { ccclass, property } = _decorator;\n@ccclass('PlayerBloodBar')\nexport class PlayerBloodBar extends Component {\n\n    @property\n    public lineWidth: number = 1;//中间线的宽度\n\n    @property(Prefab)\n    public pbLine: Prefab = null!//中间线预制体\n\n    @property(Node)\n    public ndContainer: Node = null!;//血块容器\n\n    @property(LayoutComponent)\n    public layoutContainer: LayoutComponent = null!;//container节点的layout组件\n\n    @property(UITransformComponent)\n    public UIComWhiteBar: UITransformComponent = null!;//白色进度条的UI组件\n\n    @property(Node)\n    public ndWhiteBar: Node = null!;//白色进度条节点\n\n    @property(UITransformComponent)\n    public UIComCurBloodBar: UITransformComponent = null!;//血量进度条的UI组件\n\n    @property(Node)\n    public ndCurBloodBar: Node = null!;//血量进度条节点\n\n    @property(SpriteComponent)\n    public spComBloodBar: SpriteComponent = null!;//血条背景色\n\n    @property(SpriteFrame)\n    public sfRed: SpriteFrame = null!//小怪和bos是红色背景\n\n    @property(SpriteFrame)\n    public sfGreen: SpriteFrame = null!//玩家是绿色背景\n\n    @property(UITransformComponent)\n    public UIComBloodBar: UITransformComponent = null!;//血条容器节点\n\n    private _minBloodBarWidth: number = 100;//最小整体血条宽度\n    private _bloodBarWidth: number = 0;//当前整体血条宽度\n    private _minBloodBarItemWidth: number = 10;//最小单个血块宽度\n    private _maxItemBlood: number = 200;//每隔血条\n    private _totalBlood: number = 0;//总的血量\n    private _ndTarget: Node = null!;//跟随目标\n    private _offsetPos: Vec3 = null!;//偏差\n    private _curPos: Vec3 = new Vec3()!;//当前血条位置\n    private _curBlood: number = 0;//当前血量值\n    private _scriptParent: any = null!;//血条所在节点绑定的脚本\n    private _scale: Vec3 = new Vec3();//血条缩放倍数\n    private _bloodBarHeight: number = 15;//血条高度\n    private _oriContainerPos: Vec3 = new Vec3();//初始线条容器节点位置\n    private _curContainerPos: Vec3 = new Vec3();//当前线条容器节点位置\n    private _bloodBarPos = new Vec3();//血条位置\n    private _whiteBarPos = new Vec3();//白条位置\n\n    start () {\n        // [3]\n    }\n\n    /**\n     * 展示血条\n     *\n     * @param {*} scriptParent 血条使用者绑定的节点，如玩家或者小怪\n     * @param {number} totalBlood 总血量\n     * @param {number} bloodBarType 血条类型\n     * @param {Vec3} offsetPos 血条位置偏差\n     * @param {Vec3} scale 血条缩放大小\n     * @param {(Function | null)} [callback] \n     * @param {boolean} [isInit=true] 是否是初次展示，初次展示则显示完整血量，否则刷新的时候展示当前血量\n     * @memberof BloodBar\n     */\n    public show (scriptParent: any, totalBlood: number, offsetPos: Vec3, scale: Vec3, callback?: Function | null, isInit: boolean = true) {\n        this._scriptParent = scriptParent!;\n        this._totalBlood = totalBlood;\n        this._offsetPos = offsetPos;\n        this._scale = scale;\n        this._ndTarget = scriptParent.node;\n\n        this.node.setScale(scale);\n\n        if (isInit) {\n            this._curBlood = this._totalBlood;\n        }\n\n        //血块数量\n        let bloodItemNum = Math.ceil(totalBlood / this._maxItemBlood);\n        //当前血量条最小长度\n        this._bloodBarWidth = this._minBloodBarItemWidth * bloodItemNum;\n        //所需血条总宽度大于最小整体血条宽度，需增大血条大小，反之使用最小血条宽度\n        let isOutOfRange = this._bloodBarWidth > this._minBloodBarWidth;\n\n        this._oriContainerPos.set(this.ndContainer.position);\n\n        if (isOutOfRange) {\n            this._curContainerPos.set(-this._bloodBarWidth * 0.5, this._oriContainerPos.y, 0);\n            this.ndContainer.setPosition(this._curContainerPos);\n        } else {\n            this._bloodBarWidth = this._minBloodBarWidth;\n        }\n\n        //每个间隔线之间的距离，1为它本身的宽度，默认前后不显示\n        this.layoutContainer.spacingX = this._bloodBarWidth / bloodItemNum - 1;\n\n        this.ndContainer.children.forEach((item: any)=>{\n            item.active = false;\n        })\n\n        //当前血量占全部的比例\n        let ratio = this._curBlood / this._totalBlood;\n        ratio = clamp(ratio, 0, 1);\n\n        //设置整体大小\n        this.UIComBloodBar.setContentSize(this._bloodBarWidth + 2, this._bloodBarHeight);\n        this.UIComBloodBar.priority = constant.PRIORITY.BLOOD;\n\n        //根据当前血量刷新中间连接线\n        for (let i = 0; i < bloodItemNum + 1; i++) {\n            let ndLineItem: Node;\n\n            if (i >= this.ndContainer.children.length) {\n                ndLineItem = poolManager.instance.getNode(this.pbLine, this.ndContainer);\n            } else {\n                ndLineItem = this.ndContainer.children[i];\n            }\n\n            ndLineItem.active = true;\n\n            let UICom = ndLineItem.getComponent(UITransformComponent) as UITransformComponent;\n\n            if (i % 5 === 0) {\n                UICom.setContentSize(1.5, 7);\n            } else {\n                UICom.setContentSize(1, 5);\n            }\n        }\n\n        let layCom = this.ndContainer.getComponent(LayoutComponent) as LayoutComponent;\n        //立即执行更新布局\n        layCom.updateLayout();\n\n        //头尾不展示中间线\n        this.ndContainer.children.forEach((ndLineItem: Node, i: number)=>{\n            let spComLine = ndLineItem.getComponent(SpriteComponent) as SpriteComponent;\n            if (i === 0 || i === bloodItemNum || ndLineItem.position.x > this._bloodBarWidth * ratio) {\n                spComLine.enabled = false;\n            } else {\n                spComLine.enabled = true;\n            }\n        })\n\n        //设置白色进度条长度和位置\n        this.UIComWhiteBar.setContentSize(ratio * this._bloodBarWidth, this._bloodBarHeight * 0.8);\n        this._whiteBarPos.set(this.ndContainer.position.x, 0.5, this.ndContainer.position.z);\n        this.ndWhiteBar.setPosition(this._whiteBarPos);\n\n        //设置血量进度条长度和位置\n        this.UIComCurBloodBar.setContentSize(ratio * this._bloodBarWidth, this._bloodBarHeight * 0.8);\n        this._bloodBarPos.set(this.ndContainer.position.x, 0, this.ndContainer.position.z);\n        this.ndCurBloodBar.setPosition(this._bloodBarPos);\n\n        callback && callback();\n    }\n\n    /**\n     * 刷新血量\n     *\n     * @param {number} num 血量值\n     * @param {boolean} [isIncreaseLimit=false] //是否增加上限\n     * @memberof PlayerBloodBar\n     */\n    public refreshBlood (num: number, isIncreaseLimit: boolean = false) {\n        this._curBlood += num;\n        this._curBlood = clamp(this._curBlood, 0, this._totalBlood);\n        let ratio = this._curBlood / this._totalBlood;\n\n        if (num < 0) {//减血\n            ratio = ratio <= 0 ? 0 : ratio;\n    \n            this.UIComCurBloodBar.setContentSize(this._bloodBarWidth * ratio, this._bloodBarHeight * 0.8);\n    \n            if (ratio > 0) {\n                this.ndContainer.children.forEach((ndChild: Node)=>{\n                    let spComLine = ndChild.getComponent(SpriteComponent) as SpriteComponent;\n    \n                    if (spComLine.enabled && ndChild.position.x > this._bloodBarWidth * ratio) {\n                        spComLine.enabled = false;\n                    }\n                })\n                \n                tween(this.UIComWhiteBar)\n                .to(0.7, {width: this._bloodBarWidth * ratio})\n                .call(()=>{\n                    \n                })\n                .start();\n            } else {\n                // poolManager.instance.putNode(this.node);\n                this.node.active = false;\n                this._scriptParent.isDie = true;\n                this._curBlood = 0;\n            }\n        } else {//加血\n            if (isIncreaseLimit) {//增加上限,并增加多出来的血量，最多不超过上限\n                this._curBlood += num;\n                this._totalBlood += num;\n                this._curBlood = this._curBlood >= this._totalBlood ? this._totalBlood : this._curBlood;\n                ratio = this._curBlood / this._totalBlood;\n            } else {//普通加血，最多不超过上限                \n                ratio = ratio >= 1 ? 1 : ratio;\n            }\n\n            tween(this.UIComCurBloodBar)\n            .to(1, {width: this._bloodBarWidth * ratio})\n            .call(()=>{\n                this.show(this._scriptParent, this._totalBlood, this._offsetPos, this._scale, null, false);\n\n                })\n            .start();\n        }\n    }\n\n    update (deltaTime: number) {\n        // [4]\n        //血条跟随人物移动\n        if (this.node.parent && this.node.active && this._ndTarget && this._ndTarget.parent) {\n            GameManager.mainCamera?.convertToUINode(this._ndTarget.worldPosition, find(\"Canvas\") as Node, this._curPos);\n            this._curPos.add(this._offsetPos);\n            this.node.setPosition(this._curPos);\n        }\n        \n    }\n}\n"]}