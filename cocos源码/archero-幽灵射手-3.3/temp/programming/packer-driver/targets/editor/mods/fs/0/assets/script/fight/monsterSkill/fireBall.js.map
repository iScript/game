{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/monsterSkill/fireBall.ts"],"names":["_decorator","Component","Vec3","ParticleSystemComponent","AudioManager","constant","EffectManager","poolManager","resourceUtil","GameManager","ccclass","property","FireBall","start","init","skillInfo","baseInfo","scriptParent","_scriptParent","_totalFlyTime","_maxFlyHeight","_curFlyTime","_posStart","set","node","worldPosition","x","groundWorPosY","z","_posEnd","attackPos","subtract","_posOffset","length","flySpeed","isPlayHitFireBall","children","forEach","ndChild","active","instance","playTrail","playSound","SOUND","FIRE_BALL","update","deltaTime","parent","ndPlayer","isGameOver","isGamePause","percent","Number","toFixed","height","Math","cos","PI","posTarget","y","setWorldPosition","_isAutoRotate","_rotateCoolTime","_posNextTarget","forward","normalize","position","scriptWarning","hideWarning","loadEffectRes","then","prefab","ndEffect","getNode","arrParticle","getComponentsInChildren","item","simulationSpeed","clear","stop","play","setTimeout","putNode"],"mappings":"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","sourcesContent":["import { _decorator, Component, Vec3, Quat, Node, Prefab, ParticleSystemComponent } from 'cc';\nimport { AudioManager } from '../../framework/audioManager';\nimport { constant } from '../../framework/constant';\nimport { EffectManager } from '../../framework/effectManager';\nimport { poolManager } from '../../framework/poolManager';\nimport { resourceUtil } from '../../framework/resourceUtil';\nimport { GameManager } from '../gameManager';\n//小火球组件：\b抛物线，只有落地(播放爆炸)才有伤害, 所以碰撞器在hitFireBall1里面\nconst { ccclass, property } = _decorator;\n@ccclass('FireBall')\nexport class FireBall extends Component {\n    public isPlayHitFireBall: boolean = false;//是否播放火球\n    public groundWorPosY: number = 1.8;//地面相对世界原点高度\n    public scriptWarning: any = null!;//预警技能脚本\n    public skillInfo: any = null!;//技能信息\n    public baseInfo: any = null!;//敌人基本信息\n\n    private _isAutoRotate: boolean = true;//方向是否自动调整\n    private _posStart: Vec3 = new Vec3();//开始位置\n    private _posEnd: Vec3 = new Vec3();//结束位置\n    private _posOffset: Vec3 = new Vec3();//开始和结束位置差\n    private _totalFlyTime: number = 0;//弓箭飞行时间\n    private _maxFlyHeight: number =0;//弓箭最大飞行高度\n    private _curFlyTime: number = 0;//当前飞行时间\n    private _rotateCoolTime: number = 0;//每隔0.1秒调整角度\n    private _oriScale: Vec3 = new Vec3();//初始缩放大小\n    private _posNextTarget: Vec3 = new Vec3();//下次的目标位置\n    private _scriptParent: any = null!;\n\n    start () {\n\n    }\n\n    /**\n    * 初始化 \n    */\n    public init (skillInfo: any, baseInfo: any, scriptParent?: any) {\n        this.skillInfo = skillInfo;\n        this.baseInfo = baseInfo;\n        this._scriptParent = scriptParent;\n        this._totalFlyTime = 0;\n        this._maxFlyHeight = 0;\n        this._curFlyTime = 0;\n        this._posStart.set(this.node.worldPosition.x, this.groundWorPosY, this.node.worldPosition.z);\n        this._posEnd.set(scriptParent.attackPos);\n        Vec3.subtract(this._posOffset, this._posEnd, this._posStart);\n        this._totalFlyTime = this._posOffset.length() / skillInfo.flySpeed;\n        this._maxFlyHeight = this._totalFlyTime * 3;//最大飞行高度跟飞行距离成正比     \n        this.isPlayHitFireBall = false;\n\n        this.node.children.forEach((ndChild: Node)=>{\n            ndChild.active = true;\n        })\n\n        EffectManager.instance.playTrail(this.node);\n\n        AudioManager.instance.playSound(constant.SOUND.FIRE_BALL);\n    }\n\n    update (deltaTime: number) {\n        if (!this.node.parent || !GameManager.ndPlayer || GameManager.isGameOver || GameManager.isGamePause) {\n            return;\n        }\n\n        //向指定目标飞行\n        if (this._totalFlyTime > 0 && this.node.parent) {\n            if (this._curFlyTime <  this._totalFlyTime) {\n                this._curFlyTime += deltaTime;\n                this._curFlyTime = this._curFlyTime >= this._totalFlyTime ? this._totalFlyTime : this._curFlyTime;\n \n                let percent = Number((this._curFlyTime / this._totalFlyTime).toFixed(2));\n                //曲线飞行\n                let height = this._maxFlyHeight * Math.cos(percent * Math.PI - Math.PI/2);\n                let posTarget = new Vec3(this._posStart.x + this._posOffset.x * percent, this._posStart.y + height, this._posStart.z + this._posOffset.z * percent);\n\n                this.node.setWorldPosition(posTarget);\n\n                if (this._isAutoRotate) {\n                    this._rotateCoolTime -= deltaTime;\n                    if (this._rotateCoolTime < 0) {\n                        this._rotateCoolTime = 0.1;\n                        percent = Number(((this._curFlyTime + deltaTime) / this._totalFlyTime).toFixed(2));\n                        if (percent < 1) {\n                            //曲线飞行\n                            height = this._maxFlyHeight * Math.cos(percent*Math.PI - Math.PI/2);\n                            this._posNextTarget.set(this._posStart.x + this._posOffset.x*percent, this._posStart.y + height,this._posStart.z + this._posOffset.z*percent)\n                            this.node.forward = this._posNextTarget.subtract(posTarget).normalize();\n                        }\n                    }\n                }\n\n                //小火球碰到地面\n                if (Number((this.node.position.y).toFixed(2)) <= this.groundWorPosY && !this.isPlayHitFireBall && this._curFlyTime > 0) {\n                    this.isPlayHitFireBall = true;\n\n                    //关闭预警\n                    this._scriptParent.scriptWarning?.hideWarning();   \n                    \n                    this.node.children.forEach((ndChild: Node)=>{\n                        ndChild.active = false;\n                    })\n\n                    //展示火焰爆炸\n                    resourceUtil.loadEffectRes(\"hit/hitFireBall1\").then((prefab: any)=>{\n                        let ndEffect: Node = poolManager.instance.getNode(prefab as Prefab, this.node) as Node;\n                        ndEffect.setWorldPosition(this.node.worldPosition);  \n\n                        let arrParticle:  ParticleSystemComponent[]= ndEffect.getComponentsInChildren(ParticleSystemComponent);\n                        arrParticle.forEach((item: ParticleSystemComponent)=>{\n                            item.simulationSpeed = 1;\n                            item?.clear();\n                            item?.stop();\n                            item?.play()\n                        })\n            \n                        setTimeout(()=>{\n                            poolManager.instance.putNode(ndEffect);\n                            poolManager.instance.putNode(this.node);\n                        }, 2000)  \n                    })\n                }\n            }\n        }\n    }\n}"]}