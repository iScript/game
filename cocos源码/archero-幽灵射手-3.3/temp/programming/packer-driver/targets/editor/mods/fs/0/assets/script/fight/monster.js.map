{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/monster.ts"],"names":["_decorator","Component","Vec3","macro","Quat","RigidBodyComponent","AudioManager","util","localConfig","EffectManager","uiManager","poolManager","constant","GameManager","clientEvent","MonsterModel","resourceUtil","EnergyBall","FireBall","DispersionSurround","Dispersion","FireBallBig","Tornado","Laser","CharacterRigid","qt_0","v3_0","ccclass","property","Monster","BLOOD_TIP_DIRECTION","LEFT_UP","curMoveSpeed","v","_curMoveSpeed","scriptCharacterRigid","initSpeed","moveSpeedAddition","isDie","_isDie","showDie","_isStopAttack","scriptMonsterModel","isIdle","isAttacking","isHitting","_prevMoveWorPos","equals","node","worldPosition","onEnable","on","EVENT_TYPE","MONSTER_MOVE","_monsterMove","onDisable","off","scriptBloodBar","parent","instance","putNode","recycleWarning","_ndMonsterSkill","start","init","baseInfo","layerInfo","_ndBody","getChildByName","getComponent","rigidComMonster","clearState","playAni","MONSTER_ANI_TYPE","IDLE","_curAttackInterval","_isHitByPlayer","_isInitBloodBar","_isAllowToAttack","_isArrived","_checkMoveInterval","_iceDamageCountDown","_fireDamageCountDown","_skillIndex","_moveUnit","_movePattern","movePattern","_refreshSkill","scriptMonster","curAttackSpeed","attackSpeed","moveSpeed","_getMinLength","name","_minLength","allSkillInfo","skill","split","length","skillID","skillInfo","queryByID","stopMove","playSound","sound","SOUND","AULA_DIE","BOOM_DRAGON_DIE","HELL_FIRE_DIE","MAGICIAN_DIE","DRAGON_DIE","showRewardBounce","goldNum","heartDropRate","Math","random","scriptPlayer","isBloodthirsty","bloodNum","curHpLimit","addBlood","DIE","scriptWarning","playHit","isArrowLaunch","isPassiveLightning","HIT_MONSTER","effectPath","arrEffectPath","recycleTime","isHasIce","isArrowIce","isHasFire","isArrowFire","isHasLightning","isArrowLightning","floor","playEffect","_hitEffectPos","HIT","arrTargets","getNearbyMonster","forEach","ndChild","showLightningChain","dodgeRate","tipType","FIGHT_TIP","REDUCE_BLOOD","damage","curAttackPower","defensePower","defenseAddition","isCriticalHit","curCriticalHitRate","curCriticalHitDamage","CRITICAL_HIT","hp","refreshBlood","cb","showBloodTips","_bloodTipOffsetPos","console","log","showMonsterBloodBar","active","playAction","obj","action","MONSTER_ACTION","MOVE","angle","value","radian","RAD","_horizontal","round","cos","_vertical","sin","isMoving","_curAngleY","set","STOP_MOVE","ndPlayer","_attackPlayer","subtract","_offsetPos_2","attackForward","normalize","negative","attackPos","warning","scale","ID","MONSTER_SKILL","FIRE_BALL","FIRE_BALL_BIG","LASER","ENERGY_BALL","showWarning","playAttackAni","attackAniName","ATTACK","resName","ATTACK_1","ATTACK_2","scheduleOnce","moveFrequency","offsetLength","getTwoNodeXZLength","_minLengthRatio","_getRandomMovePos","_randomMoveTryTimes","x","getRandom","getRandomDirector","z","_targetWorPos","toFixed","y","getTwoPosXZLength","_offsetPos","_lookAtTargetWorPos","MONSTER_MOVE_PATTERN","NO_MOVE","RANDOM","FORWARD_PLAYER","multiplyScalar","add","targetWorPos","screenPos1","mainCamera","worldToScreen","screenPos2","_playerMonsterOffset","angleY","atan2","PI","releaseSkillToPlayer","isNormalAttack","reduceBlood","forward","_forWard","loadEffectRes","then","prefab","getNode","ndGameManager","setWorldPosition","scriptSkillCollider","DISPERSION","children","idx","TORNADO","DISPERSION_SURROUND","update","deltaTime","isGameStart","isGameOver","isGamePause","_hideBloodCountDown","offsetTarget","_isPlayRotate","_tempAngle","eulerAngles","_curAngle","isEqual","_targetAngle","lerp","_rotateDirection","fromViewUp","toEuler","_curAngle_2","abs","move","isRunning","RUN","countDown","Number"],"mappings":"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","sourcesContent":["import { AudioManager } from './../framework/audioManager';\nimport { util } from './../framework/util';\nimport { localConfig } from './../framework/localConfig';\nimport { EffectManager } from './../framework/effectManager';\nimport { uiManager } from './../framework/uiManager';\nimport { poolManager } from './../framework/poolManager';\nimport { _decorator, Component, Vec3, macro, Node, VideoClip, Quat, clamp, RigidBodyComponent } from 'cc';\nimport { constant } from '../framework/constant';\nimport { GameManager } from './gameManager';\nimport { MonsterBloodBar } from '../ui/fight/monsterBloodBar';\nimport { clientEvent } from '../framework/clientEvent';\nimport { MonsterModel } from './monsterModel';\nimport { resourceUtil } from '../framework/resourceUtil';\nimport { EnergyBall } from './monsterSkill/energyBall';\nimport { FireBall } from './monsterSkill/fireBall';\nimport { DispersionSurround } from './monsterSkill/dispersionSurround';\nimport { Dispersion } from './monsterSkill/dispersion';\nimport { FireBallBig } from './monsterSkill/fireBallBig';\nimport { Tornado } from './monsterSkill/tornado';\nimport { Laser } from './monsterSkill/laser';\nimport { CharacterRigid } from './characterRigid';\n//怪物组件\nlet qt_0 = new Quat();\nlet v3_0 = new Vec3();\n\nconst { ccclass, property } = _decorator;\n//普通怪物组件\n@ccclass('Monster')\nexport class Monster extends Component {\n    public scriptMonsterModel: MonsterModel = null!;//怪物动画组件播放脚本\n    public isMoving: boolean = false;//怪物是否正在移动\n    public scriptBloodBar: MonsterBloodBar = null!;//关联的血条脚本\n    public bloodTipDirection: number = constant.BLOOD_TIP_DIRECTION.LEFT_UP;//血量提示方向\n    public skillInfo: any = null!;//技能信息\n    public allSkillInfo: any = null!;//所有拥有的技能信息\n    public baseInfo: any = null!;//怪物在base表里面对应数据\n    public layerInfo: any = null!;//怪物在当前层级的配置数据\n    public curAttackSpeed: number = 0;//当前攻击速度\n    public scriptWarning: any = null!;//预警技能脚本\n    public attackForward: Vec3 = new Vec3();//攻击朝向\n    public attackPos: Vec3 = new Vec3();//技能即将攻击的位置\n    public rigidComMonster: RigidBodyComponent = null!;\n    public scriptCharacterRigid: CharacterRigid = null!;\n    public set curMoveSpeed (v: number) {\n        this._curMoveSpeed = v;\n        this.scriptCharacterRigid.initSpeed(v, GameManager.moveSpeedAddition);\n    }\n\n    public get curMoveSpeed () {\n        return this._curMoveSpeed;\n    }\n\n    public set isDie (v: boolean) {\n        this._isDie = v;\n\n        if (this._isDie) {\n            this.showDie();\n        }\n    }\n\n    public get isDie () {\n        return this._isDie;\n    }\n\n    protected _isDie: boolean = false;//是否死亡\n    protected _curAttackInterval: number = 0;//距离上次被攻击的时长\n    protected _isHitByPlayer: boolean = false;//是否被玩家击中\n    protected _isInitBloodBar: boolean = false;//是否已经初始化血条\n    protected _bloodTipOffsetPos: Vec3 = new Vec3(0, 50, 0);//怪物血条距离人物位置偏差\n    protected _hideBloodCountDown: number = 3;//怪物的血条被攻击后才会显示，且如果3秒未被攻击则会隐藏\n    protected _hitEffectPos: Vec3 = new Vec3(0, 0.2, 0);//受击特效位置\n    protected _isAllowToAttack: boolean = false;//是否允许攻击\n    protected _playerMonsterOffset: Vec3 = new Vec3();//怪物和玩家间距\n    protected _curAngleY: number = 0;//当前Y分量旋转角度\n    protected _horizontal: number = 0;//水平移动距离\n    protected _vertical: number = 0;//垂直移动距离\n    protected _iceDamageCountDown: number = 0;//冰冻伤害倒计时\n    protected _fireDamageCountDown: number = 0;//灼烧伤害倒计时\n    protected get _isStopAttack () {//当前是否停止攻击,且原地跑\n        return  !this.isDie && !this.scriptMonsterModel.isIdle && !this.scriptMonsterModel.isAttacking && !this.scriptMonsterModel.isHitting && this._prevMoveWorPos.equals(this.node.worldPosition, 0.01);\n    }\n    protected _ndMonsterSkill: Node = null!;//技能特效节点\n    protected _skillIndex: number = 0;//当前技能索引\n    protected _minLength: number = 3;//怪物和玩家之间的最小距离\n\n    protected _curMoveSpeed: number = 0;//当前移动速度\n\n    //移动相关\n    protected _moveMode: number = 0;//移动方式\n    protected _movePattern: number = 0;//移动模式\n    protected _moveFrequency: number = 0;//两次移动间隔,为0表示一直移动)\n    protected _offsetPos: Vec3 = new Vec3();//和玩家之间的向量差\n    protected _offsetPos_2: Vec3 = new Vec3();//和玩家之间的向量差\n    protected _mixOffset: Vec3 = new Vec3(1, 0, 1);//和玩家的最小间距\n    protected _targetWorPos: Vec3 = new Vec3();//下一步的目标位置\n    protected _isPlayRotate: boolean = false;//是否旋转\n    protected _curAngle: Vec3 = new Vec3()//当前旋转的角度\n    protected _curAngle_2: Vec3 = new Vec3();//怪物角度\n    protected _tempAngle: Vec3 = new Vec3();//临时变量，怪物角度\n    protected _rotateDirection: Vec3 = new Vec3();//旋转方向\n    protected _forWard: Vec3 = new Vec3();//朝向\n    protected _ndRunSmokeEffect: Node = null!;//烟雾特效\n    protected _originAngle: Vec3 = new Vec3(0, -90, 0);//怪物开始角度\n    protected _targetAngle: Vec3 = new Vec3();//目标旋转角度\n    protected _checkInterval: number = 0.04;//每40ms刷新一次\n    protected _currentTime: number = 0;//当前累积时间\n    protected _ndBody: Node = null!;//\n    protected _curMoveWorPos: Vec3 = new Vec3();//当前怪物移动位置\n    protected _isArrived: boolean = false;//是否到达\n    protected _checkMoveInterval: number = 0;//检查当前是否移动时间间隔\n    protected _prevMoveWorPos: Vec3 = new Vec3();//之前怪物的移动坐标\n    protected _moveUnit: Vec3 = new Vec3();//每次移动的单位向量\n    protected _minLengthRatio: number = 1.1;//达到最小距离的1.1倍视为进入最小距离\n    protected _randomMoveTryTimes: number= 5;//每次随机移动位置最多计算次数\n\n    onEnable () {\n        clientEvent.on(constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n    }\n\n    onDisable () {\n        clientEvent.off(constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n\n        //回收血条节点\n        if (this.scriptBloodBar) {\n            if (this.scriptBloodBar.node.parent) {\n                poolManager.instance.putNode(this.scriptBloodBar.node);\n            }\n            this.scriptBloodBar = null!;\n        }\n\n        //回收预警节点\n        this.recycleWarning();\n\n        //回收技能节点\n        if (this._ndMonsterSkill) {\n            poolManager.instance.putNode(this._ndMonsterSkill);\n            this._ndMonsterSkill = null!;\n        }\n    }\n\n    start () {\n        // [3]\n    }\n\n    public init(baseInfo: any, layerInfo: any) {\n        this.baseInfo = baseInfo;\n        this.layerInfo = layerInfo;\n        this.isDie = false;\n        \n        this.recycleWarning();\n\n        this._ndBody = this.node.getChildByName(\"body\") as Node;\n        this.scriptCharacterRigid = this.node.getComponent(CharacterRigid) as CharacterRigid;\n\n        if (!this.rigidComMonster) {\n            this.rigidComMonster = this.node.getComponent(RigidBodyComponent) as RigidBodyComponent;\n        }\n        this.rigidComMonster.clearState();\n\n        this.scriptMonsterModel = this._ndBody.getComponent(MonsterModel) as MonsterModel;\n        this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.IDLE, true);\n\n        this._curAttackInterval = 0;\n        this._isHitByPlayer = false;\n        this._isInitBloodBar = false;\n        this._isAllowToAttack = false;\n        this._isArrived = false;\n        this._checkMoveInterval = 0;\n        this._iceDamageCountDown = 0;\n        this._fireDamageCountDown = 0;\n        this._ndMonsterSkill = null!;\n        this._skillIndex = 0;\n        this._moveUnit = new Vec3();\n        // this._isCloseFighting = false;\n        this._movePattern = layerInfo.movePattern ? layerInfo.movePattern : this.baseInfo.movePattern;\n        \n        this.scriptBloodBar = null!;\n\n        this._refreshSkill();\n\n        this.scriptMonsterModel.scriptMonster = this;\n\n        this.curAttackSpeed = this.baseInfo.attackSpeed;\n        this.curMoveSpeed = this.baseInfo.moveSpeed;\n\n        this._getMinLength();\n    }\n\n    /**\n     * 获取怪物和玩家之间的最小距离\n     *\n     * @memberof Monster\n     */\n    protected _getMinLength () {\n        if (this.node.name === \"aula\") {\n            this._minLength = 2;\n        } else if (this.node.name === \"boomDragon\") {\n            this._minLength = 2;\n        } else if (this.node.name === \"hellFire\") {\n            this._minLength = 2.5;\n        } else if (this.node.name === \"magician\") {\n            this._minLength = 2.5;\n        } else if (this.node.name === \"dragon\") {\n            this._minLength = 5;\n        }\n    }\n\n    /**\n     * 刷新当前使用技能\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _refreshSkill () {\n        this.allSkillInfo = this.layerInfo.skill === \"\" ? [] :this.layerInfo.skill.split(\"#\");\n        if (this.allSkillInfo.length) {\n            this._skillIndex = this._skillIndex >= this.allSkillInfo.length ? 0 : this._skillIndex;\n            let skillID = this.allSkillInfo[this._skillIndex];\n            this.skillInfo = localConfig.instance.queryByID(\"monsterSkill\", skillID);\n            this._skillIndex += 1;\n        } \n    }\n\n    /**\n     * 怪物阵亡\n     *\n     * @memberof Monster\n     */\n    public showDie () {\n        this.scriptCharacterRigid.stopMove();\n\n        this.recycleWarning();\n\n        AudioManager.instance.playSound(`${this.node.name}Die`);\n\n        let sound = '';\n        if (this.node.name === \"aula\") {\n            sound = constant.SOUND.AULA_DIE;\n        } else if (this.node.name === \"boomDragon\") {\n            sound = constant.SOUND.BOOM_DRAGON_DIE;\n        } else if (this.node.name === \"hellFire\") {\n            sound = constant.SOUND.HELL_FIRE_DIE;\n        } else if (this.node.name === \"magician\") {\n            sound = constant.SOUND.MAGICIAN_DIE;\n        } else if (this.node.name === \"dragon\") {\n            sound = constant.SOUND.DRAGON_DIE;\n        }\n\n        AudioManager.instance.playSound(sound);\n        \n        EffectManager.instance.showRewardBounce(this.node, \"gold/gold\", this.baseInfo.goldNum, ()=>{\n            if (this.baseInfo.heartDropRate >= Math.random()) {\n                EffectManager.instance.showRewardBounce(this.node, \"heart/heart\", 1);\n            }\n        });\n\n        //检查玩家是否拥有嗜血技能：主角击杀敌人时回复自身生命上限2%的生命值。\n        if (GameManager.scriptPlayer.isBloodthirsty) {\n            let bloodNum = GameManager.scriptPlayer.curHpLimit * 0.02;\n            GameManager.scriptPlayer.addBlood(bloodNum);\n        }\n\n        this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.DIE, false, ()=>{\n            if (this.isDie) {\n                this.scriptBloodBar = null!;\n                poolManager.instance.putNode(this.node);\n            }\n        });\n    }\n\n    public recycleWarning () {\n        //回收预警节点\n        if (this.scriptWarning) {\n            if (this.scriptWarning.node.parent) {\n                poolManager.instance.putNode(this.scriptWarning.node);\n            } \n            this.scriptWarning = null!;\n        }\n    }\n\n    /**\n     * 怪物播放受击效果\n     *\n     * @param {boolean} isArrowLaunch 是否被弹射的弓箭射中，如果是则造成普通伤害\n     * @param {boolean} isPassiveLightning 是否被动受到电击\n     * @return {*} \n     * @memberof Monster\n     */\n    public playHit (isArrowLaunch: boolean = false, isPassiveLightning: boolean = false) {\n        if (this.isDie) {\n            return;\n        }\n\n        AudioManager.instance.playSound(constant.SOUND.HIT_MONSTER);\n\n        //播放受击特效\n        let effectPath = \"hit/hit\";\n        let arrEffectPath: any = [];\n        let recycleTime = 1.2;\n        \n        let isHasIce = GameManager.scriptPlayer.isArrowIce;\n        let isHasFire = GameManager.scriptPlayer.isArrowFire;\n        let isHasLightning = GameManager.scriptPlayer.isArrowLightning;\n\n        if (isHasFire || isHasIce || isHasLightning) {\n            if (isHasFire && isHasIce && isHasLightning) {\n                arrEffectPath = [\"hit/hitFire\", \"hit/hitIce\", \"hit/hitLightning\"];\n            } else {\n                if (isHasFire && isHasIce || isHasFire && isHasLightning || isHasIce && isHasLightning) {\n                    if (isHasFire && isHasIce) {\n                        arrEffectPath = [\"hit/hitFire\", \"hit/hitIce\"];\n                    } else if (isHasLightning && isHasFire) {\n                        arrEffectPath = [\"hit/hitFire\", \"hit/hitLightning\"];\n                    } else if (isHasLightning && isHasIce) {\n                        arrEffectPath = [\"hit/hitIce\", \"hit/hitLightning\"];\n                    }\n                } else {\n                    if (isHasFire) {\n                        arrEffectPath = [\"hit/hitFire\"];\n                    } else if (isHasIce) {\n                        arrEffectPath = [\"hit/hitIce\"];\n                    } else if (isHasLightning) {\n                        arrEffectPath = [\"hit/hitLightning\"];\n                    }\n                }\n            }\n\n            effectPath = arrEffectPath[Math.floor(Math.random() * arrEffectPath.length)];\n\n            if (effectPath === \"hit/hitFire\") {\n                //灼烧技能持续2秒\n                recycleTime = 2;\n            } else if (effectPath === \"hit/hitIce\") {\n                recycleTime = 1;\n            }\n\n            //被冰冻技能击中\n            if (isHasIce && this._iceDamageCountDown <= 0) {\n                this._iceDamageCountDown = 1;\n            }\n\n            //被灼烧技能击中\n            if (isHasFire && this._fireDamageCountDown <= 0) {\n                this._fireDamageCountDown = 2;\n            }\n        } \n\n        EffectManager.instance.playEffect(this.node, effectPath, false, true, recycleTime, 1, this._hitEffectPos);\n\n        //攻击的时候霸体状态\n        if (!this.scriptMonsterModel.isAttacking) {\n            this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.HIT);\n        }\n\n        //受到攻击的敌人会向身旁一定范围内的所有敌人发射闪电，减少生命上限5%的生命值\n        if (GameManager.scriptPlayer.isArrowLightning && !isPassiveLightning) {\n            let arrTargets = GameManager.getNearbyMonster(this.node, true);\n\n            if (arrTargets) {\n                arrTargets.forEach((ndChild: Node)=>{\n                    EffectManager.instance.showLightningChain(this.node, ndChild);\n                    let scriptMonster = ndChild.getComponent(Monster) as Monster;\n                    scriptMonster.playHit(false, true);\n                })                \n            }\n        }\n\n        //怪物扣血\n        if (Math.random() > this.baseInfo.dodgeRate) {\n            //闪避失败\n            let tipType = constant.FIGHT_TIP.REDUCE_BLOOD;\n            let damage = GameManager.scriptPlayer.curAttackPower * (1 - this.baseInfo.defensePower * GameManager.defenseAddition / (this.baseInfo.defensePower + 400));\n            let isCriticalHit = Math.random() <= GameManager.scriptPlayer.curCriticalHitRate;//是否暴击\n            //是否暴击\n            if (isCriticalHit) {\n                //不是被弹射的箭击中，且不是被动受到电击\n                if (!isArrowLaunch && !isPassiveLightning) {\n                    damage = damage * GameManager.scriptPlayer.curCriticalHitDamage;\n                    tipType = constant.FIGHT_TIP.CRITICAL_HIT;\n                }\n            } \n            \n            if (isPassiveLightning) {\n                damage = this.baseInfo.hp * 0.05 * (1 - this.baseInfo.defensePower / (this.baseInfo.defensePower + 400));\n            }\n\n            this.refreshBlood(-damage, tipType);\n        }\n    }\n\n    /**\n     * 刷新血量\n     *\n     * @private\n     * @param {number} bloodNum\n     * @memberof Monster\n     */\n    public refreshBlood (bloodNum: number, tipType: number) {\n        let cb = () => {\n            this.scriptBloodBar.refreshBlood(bloodNum);\n            uiManager.instance.showBloodTips(this, tipType, bloodNum, this._bloodTipOffsetPos);\n        }\n\n        this._curAttackInterval = 0;\n\n        if (!this._isInitBloodBar) {\n            this._isInitBloodBar = true;\n            console.log(\"###小怪生成新的血条\", this.node.name);\n            uiManager.instance.showMonsterBloodBar(this, this.baseInfo.hp, ()=>{\n                cb();\n            });\n        } else {\n            if (this.scriptBloodBar) {\n                this.scriptBloodBar.node.active = true;\n                cb();\n            }\n        }\n    }\n\n    /**\n     * 怪物行为\n     *\n     * @param {*} obj\n     * @memberof Player\n     */\n     public playAction (obj: any) {\n        switch (obj.action) {\n            case constant.MONSTER_ACTION.MOVE:\n                let angle = obj.value + 135;\n\n                let radian = angle * macro.RAD;\n                this._horizontal = Math.round(Math.cos(radian) * 1);\n                this._vertical = Math.round(Math.sin(radian) * 1);  \n                this.isMoving = true;\n\n                this._curAngleY = obj.value;\n                this._curAngleY = this._curAngleY < 0 ? this._curAngleY + 360 : this._curAngleY > 360 ? this._curAngleY - 360 : this._curAngleY;\n\n                this._prevMoveWorPos.set(this.node.worldPosition);\n                break;\n            case constant.MONSTER_ACTION.STOP_MOVE:\n                this._horizontal = 0;\n                this._vertical = 0;\n\n                if (GameManager.ndPlayer) {\n                    this._attackPlayer();\n                } else {\n                    this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.IDLE, true);\n                }\n\n                this.isMoving = false;\n                this.scriptCharacterRigid.stopMove();\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 攻击玩家\n    */\n    protected _attackPlayer () {\n        if (GameManager.scriptPlayer.isDie || this.scriptMonsterModel.isAttacking) {\n            return;\n        }\n\n        Vec3.subtract(this._offsetPos_2, GameManager.ndPlayer.worldPosition, this.node.worldPosition);\n        let length = this._offsetPos_2.length();\n        this.attackForward = this._offsetPos_2.normalize().negative();\n        this.attackPos.set(GameManager.ndPlayer.worldPosition);\n\n        //预警\n        if (this.allSkillInfo.length && this.skillInfo && this.skillInfo.warning) {\n            let scale = 1;\n            if (this.skillInfo.ID === constant.MONSTER_SKILL.FIRE_BALL) {\n                scale = 0.1;\n            } else if (this.skillInfo.ID === constant.MONSTER_SKILL.FIRE_BALL_BIG) {\n                scale = 0.4;\n            } else if (this.skillInfo.ID === constant.MONSTER_SKILL.LASER) {\n                scale = 3;\n            } else if (this.skillInfo.ID === constant.MONSTER_SKILL.ENERGY_BALL) {\n                scale = length;\n            }\n\n            //回收预警节点\n            this.recycleWarning();\n\n            EffectManager.instance.showWarning(this.skillInfo.warning, scale, this, ()=>{\n                this.playAttackAni();\n            });\n        } else {\n            this.playAttackAni();\n        }\n    }\n\n    /**\n     * 播放攻击动画\n     *\n     * @protected\n     * @memberof Monster\n     */\n    public playAttackAni () {\n        let attackAniName = constant.MONSTER_ANI_TYPE.ATTACK;\n        if (this.baseInfo.resName === \"hellFire\") {\n            //hellFire的攻击动画有两个，其他小怪动画只有一个\n            if (!this.allSkillInfo.length) {\n                //近战\n                attackAniName = constant.MONSTER_ANI_TYPE.ATTACK_1;\n            } else {\n                //远程\n                attackAniName = constant.MONSTER_ANI_TYPE.ATTACK_2;\n            }\n        }\n\n        //远程\n        if (this.allSkillInfo.length) {\n            this.scriptMonsterModel.playAni(attackAniName, false, ()=>{\n                if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                    this.scheduleOnce(()=>{\n                        this._monsterMove()\n                    }, this.baseInfo.moveFrequency)\n                }\n            });\n        } else {\n            //近战\n            let offsetLength = util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            if (offsetLength <= this._minLength * this._minLengthRatio) {\n                this.scriptMonsterModel.playAni(attackAniName, false, ()=>{\n                    if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                        this.scheduleOnce(()=>{\n                            this._monsterMove()\n                        }, this.baseInfo.moveFrequency)\n                    }\n                });\n            } else {\n                if (!this.isDie && !this.scriptMonsterModel.isHitting) {\n                    this.scheduleOnce(()=>{\n                        this._monsterMove()\n                    }, this.baseInfo.moveFrequency)\n                }\n            }\n        }\n    }\n\n    private _getRandomMovePos () {\n        this._randomMoveTryTimes -= 1;\n        //随机移动：先以怪物圆环区间(1, minLength)随机移动,再朝向玩家,然后攻击\n        let x = util.getRandom(1, 3) * util.getRandomDirector();\n        let z = util.getRandom(1, 3) * util.getRandomDirector();\n        // console.log(\"###随机移动\", x, z);\n        this._targetWorPos.set(util.toFixed(this.node.worldPosition.x + x), util.toFixed(this.node.worldPosition.y), util.toFixed(this.node.worldPosition.z + z));\n\n        let offsetLength = util.getTwoPosXZLength(this._targetWorPos.x, this._targetWorPos.z, GameManager.ndPlayer.worldPosition.x, GameManager.ndPlayer.worldPosition.z);\n        //当目标位置和玩家大于最小距离，进行移动\n        if (offsetLength > this._minLength) {\n            Vec3.subtract(this._offsetPos, this._targetWorPos, this.node.worldPosition);\n            this._offsetPos.y = 0;\n            Vec3.normalize(this._moveUnit, this._offsetPos);\n            \n            this._lookAtTargetWorPos(this._targetWorPos);\n            this.isMoving = true;\n            this._isArrived = false;\n        } else {\n            //否则尝试5次随机移动，都没合适的位置则进行进攻\n            if (this._randomMoveTryTimes <= 0) {\n                // console.log(\"###随机移动\", this._randomMoveTryTimes);\n                this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n            } else {\n                this._getRandomMovePos();\n                // console.log(\"###随机移动\", this._randomMoveTryTimes);\n            }\n        }\n    }\n\n    /**\n     * 先移动\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _monsterMove () {\n        if (this.isDie) {\n            return;\n        }\n\n        if (!this._isAllowToAttack) {\n            this._isAllowToAttack = true;\n        }\n        \n        if (this._movePattern === constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n            //不移动，原地攻击玩家\n            this._lookAtTargetWorPos();\n        } else if (this._movePattern === constant.MONSTER_MOVE_PATTERN.RANDOM) {\n            this._randomMoveTryTimes = 5;\n            this._getRandomMovePos();\n        } else if (this._movePattern === constant.MONSTER_MOVE_PATTERN.FORWARD_PLAYER) {\n            //面向玩家移动：先面向玩家，再移动，然后攻击\n            this._lookAtTargetWorPos();\n            Vec3.subtract(this._offsetPos, GameManager.ndPlayer.worldPosition, this.node.worldPosition);\n            this._offsetPos.y = 0;\n\n            let offsetLength = util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            //当怪物和玩家小于2个最小距离之和或者大于一个最小距离且小于两个最小距离，进行移动\n            if (offsetLength > this._minLength * 2 || (offsetLength > this._minLength && offsetLength < this._minLength * 2)) {\n                //单位向量\n                Vec3.normalize(this._moveUnit, this._offsetPos);\n                Vec3.multiplyScalar(this._offsetPos, this._moveUnit, this._minLength);\n\n                if (offsetLength > this._minLength * 2) {\n                    //向玩家移动2个单位向量\n                    Vec3.add(this._targetWorPos, this.node.worldPosition, this._offsetPos);\n                } else {\n                    Vec3.subtract(this._targetWorPos, GameManager.ndPlayer.worldPosition, this._offsetPos);\n                }\n               \n                this._targetWorPos.set(util.toFixed(this._targetWorPos.x), util.toFixed(this.node.worldPosition.y), util.toFixed(this._targetWorPos.z));\n                this.isMoving = true;\n            } else {\n                //否则原地进行攻击\n                this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n            }\n        }\n    }\n\n    /**\n     * 怪物面向目标的世界坐标\n     *\n     * @private\n     * @memberof Monster\n     */\n    protected _lookAtTargetWorPos (targetWorPos?: Vec3) {\n        let screenPos1 = GameManager.mainCamera?.worldToScreen(GameManager.ndPlayer.worldPosition) as Vec3;\n        let screenPos2 =  GameManager.mainCamera?.worldToScreen(this.node.worldPosition) as Vec3;\n        if (targetWorPos) {\n            screenPos1 = GameManager.mainCamera?.worldToScreen(targetWorPos) as Vec3;\n        }\n        Vec3.subtract(this._playerMonsterOffset, screenPos1, screenPos2);\n        let angleY = Math.round(Math.atan2(this._playerMonsterOffset.y, this._playerMonsterOffset.x) * 180 / Math.PI);\n        // if (angleY !== this._curAngleY) {\n            this.playAction({action: constant.MONSTER_ACTION.MOVE, value: angleY});\n        // }\n    }\n    \n    /**\n     * 向玩家释放技能\n     *\n     * @returns\n     * @memberof Player\n     */\n    public releaseSkillToPlayer (isNormalAttack?:boolean) {\n        //没有技能则使用近战\n        if (!this.allSkillInfo.length) {\n            let offsetLength = util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            if (offsetLength <= this._minLength * this._minLengthRatio) {\n                GameManager.scriptPlayer.reduceBlood(this.baseInfo);\n            }\n            return;\n        }\n\n        this.node.forward = Vec3.subtract(this._forWard, GameManager.ndPlayer.worldPosition, this.node.worldPosition).normalize();\n\n        //加载对应技能\n        resourceUtil.loadEffectRes(`${this.skillInfo.resName}/${this.skillInfo.resName}`).then((prefab: any)=>{\n            if (this.isMoving) {\n                return;\n            }\n            this._ndMonsterSkill = poolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n            this._ndMonsterSkill.setWorldPosition(this.node.worldPosition.x, 2.5, this.node.worldPosition.z);\n            this._ndMonsterSkill.forward = this.attackForward.negative();\n            \n            let scriptSkillCollider: any = null!;\n\n            //怪物技能初始化\n            switch (this.skillInfo.ID) {\n                case constant.MONSTER_SKILL.ENERGY_BALL:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(EnergyBall) as EnergyBall;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case constant.MONSTER_SKILL.FIRE_BALL: \n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(FireBall) as FireBall;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case constant.MONSTER_SKILL.DISPERSION:\n                    this._ndMonsterSkill.children.forEach((ndChild: Node, idx: number)=>{\n                        let scriptSkillCollider = ndChild.getComponent(Dispersion) as Dispersion;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                    })\n                    break;\n                case constant.MONSTER_SKILL.TORNADO: \n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(Tornado) as Tornado;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case constant.MONSTER_SKILL.FIRE_BALL_BIG:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(FireBallBig) as FireBallBig;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n                case constant.MONSTER_SKILL.DISPERSION_SURROUND:\n                    this._ndMonsterSkill.children.forEach((ndChild: Node)=>{\n                        let scriptSkillCollider = ndChild.getComponent(DispersionSurround) as DispersionSurround;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                    })\n                    break;\n                case constant.MONSTER_SKILL.LASER:\n                    scriptSkillCollider = this._ndMonsterSkill.getComponent(Laser) as Laser;\n                    scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                    break;\n            }\n\n            this._refreshSkill();\n        })\n    }\n\n    update (deltaTime: number) {\n        if (!GameManager.isGameStart || GameManager.isGameOver || GameManager.isGamePause || this.isDie || !this._isAllowToAttack || !GameManager.scriptPlayer || GameManager.scriptPlayer.isDie) {\n            return;\n        }\n\n        //3秒未被攻击则会隐藏血条\n        if (!this._isHitByPlayer && this.scriptBloodBar) {\n            this._curAttackInterval += deltaTime;\n\n            if (this._curAttackInterval >= this._hideBloodCountDown && this.scriptBloodBar.node.active) {\n                this.scriptBloodBar.node.active = false;\n            }\n        }\n\n        if (this.isMoving) {\n            if (this._movePattern === constant.MONSTER_MOVE_PATTERN.RANDOM) {\n                //如果移动到目标位置就停止移动\n                let offsetLength = util.getTwoPosXZLength(this.node.worldPosition.x, this.node.worldPosition.z, this._targetWorPos.x, this._targetWorPos.z);\n                let offsetTarget = 0.05;\n\n                //爆炸龙的位移是跳，不容易精准到达目标位置,把达到范围适当增大\n                if (this.baseInfo.resName === 'boomDragon') {\n                    offsetTarget = 0.5;\n                }\n\n                if (offsetLength <= offsetTarget && !this._isArrived) {\n                    // console.log(\"###到达目标位置，面向玩家\");\n                    this._isArrived = true;\n                    this._lookAtTargetWorPos();\n                }\n                \n            } else if (this._movePattern === constant.MONSTER_MOVE_PATTERN.FORWARD_PLAYER) {\n                //如果移动到目标位置就停止移动\n                let offsetLength = util.getTwoPosXZLength(this.node.worldPosition.x, this.node.worldPosition.z, this._targetWorPos.x, this._targetWorPos.z);\n                if (offsetLength <= 0.05) {\n                    // 进行攻击\n                    this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                }\n            }\n        }\n\n        //怪物旋转\n        if (this._isPlayRotate) {\n            //当前怪物角度\n            this._tempAngle.set(this.node.eulerAngles);\n            this._tempAngle.y = this._tempAngle.y < 0 ? this._tempAngle.y + 360 : this._tempAngle.y;\n\n            if (this._curAngle.length() === 0) {\n                this._curAngle.set(this._tempAngle);\n            }\n\n            this.node.eulerAngles = this._tempAngle;\n            //第二个参数越小朝向越精确\n            let isEqual = this._curAngle.equals(this._targetAngle, 0.01);\n\n            if (!isEqual) {\n                Vec3.lerp(this._curAngle, this._curAngle, this._targetAngle, 0.167);\n                this.node.eulerAngles = this._curAngle;\n            } else {\n                this._isPlayRotate = false;\n                this.node.eulerAngles = this._targetAngle;\n                this._curAngle.set(0, 0, 0);\n\n                if (this._movePattern === constant.MONSTER_MOVE_PATTERN.RANDOM) {\n                    if (this._isArrived) {\n                        // console.log(\"###面向玩家角度结束，发起进攻1\");\n                        this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                    }\n                } else if (this._movePattern === constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n                    // console.log(\"###面向玩家角度结束，发起进攻2\");\n                    this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                }\n            }\n        }\n\n        if (this._horizontal !== 0 || this._vertical !== 0) {\n            //计算出旋转角度\n            this._rotateDirection.set(this._horizontal, 0, -this._vertical);\n            this._rotateDirection = this._rotateDirection.normalize();\n        \n            Quat.fromViewUp(qt_0, this._rotateDirection);\n            Quat.toEuler(v3_0, qt_0);\n            v3_0.y = v3_0.y < 0 ? v3_0.y + 360 : v3_0.y;\n\n            this._isPlayRotate = true;\n            \n            //设置当前怪物角度为正数\n            this._curAngle_2.set(this.node.eulerAngles);\n            if (this._curAngle_2.y < 0) {\n                this._curAngle_2.y += 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            } else if (this._curAngle_2.y > 360) {\n                this._curAngle_2.y -= 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            }\n\n            //设置目标旋转角度\n            if (!v3_0.equals(this.node.eulerAngles, 0.01)) {\n                    this._targetAngle.y = this._curAngleY + 225;\n                    this._targetAngle.y = this._targetAngle.y < 0 ? this._targetAngle.y + 360 : this._targetAngle.y > 360 ? this._targetAngle.y - 360 : this._targetAngle.y;\n                    this._targetAngle.x = 0; \n                    this._targetAngle.z = 0;\n\n                    if (Math.abs(this._targetAngle.y - this._curAngle_2.y) > 180) {\n                        if (this._targetAngle.y > this._curAngle_2.y) {\n                            this._targetAngle.y -= 360;\n                        } else {\n                            this._targetAngle.y += 360;\n                        }\n                    }\n\n                    //每次有新的_targetAngle之后，先将_curAngle初始化\n                    this._curAngle.set(0, 0, 0);\n            } else {\n                this._isPlayRotate = false;\n                this.node.eulerAngles = v3_0;\n\n                if (this._movePattern === constant.MONSTER_MOVE_PATTERN.RANDOM) {\n                    if (this._isArrived) {\n                        // console.log(\"###面向玩家角度结束，发起进攻1-1\");\n                        this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                    }\n                } else if (this._movePattern === constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n                    // console.log(\"###面向玩家角度结束，发起进攻2-1\");\n                    this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                }\n            }\n\n            if (!this.isMoving) {\n                return;\n            }\n\n            //怪物朝着目标位置移动：\n            if (this._movePattern !== constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n                this.scriptCharacterRigid.move(-this._moveUnit.x * this.curMoveSpeed * GameManager.moveSpeedAddition * 0.5 * deltaTime, -this._moveUnit.z * this.curMoveSpeed * GameManager.moveSpeedAddition * 0.5 * deltaTime);\n            }\n\n            if (!this.scriptMonsterModel.isRunning && this._movePattern !== constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n                this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.RUN, true);\n            }\n        } else {\n            if (!this.isDie && !this.scriptMonsterModel.isIdle && !this.scriptMonsterModel.isAttacking && !this.scriptMonsterModel.isHitting) {\n                this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.IDLE, true);\n                this.scriptCharacterRigid.stopMove();\n            }\n        }\n\n        //冰冻持续降低攻击力和伤害\n        if (this._iceDamageCountDown > 0) {\n            this._iceDamageCountDown -= deltaTime;\n            this.curAttackSpeed = this.baseInfo.attackSpeed * (1 - 0.1);\n            this.curMoveSpeed = this.baseInfo.moveSpeed * (1 - 0.5);\n\n            if (this._iceDamageCountDown <= 0) {\n                this.curAttackSpeed = this.baseInfo.attackSpeed;\n                this.curMoveSpeed = this.baseInfo.moveSpeed;\n            }\n        }\n\n        //灼烧持续扣血\n        if (this._fireDamageCountDown > 0) {\n            this._fireDamageCountDown -= deltaTime;\n\n            let countDown = Number((this._fireDamageCountDown).toFixed(2))\n            countDown = countDown * 100 % 50;\n            if (countDown === 0) {\n                // console.log(\"灼烧扣血\", this._fireDamageCountDown);\n                let bloodNum = this.baseInfo.hp * 0.05;\n                this.refreshBlood(-bloodNum, constant.FIGHT_TIP.REDUCE_BLOOD);\n            }\n        }\n\n        //检查当前是否碰到障碍或者其他物体导致无法达到目标位置\n        if (this._movePattern !== constant.MONSTER_MOVE_PATTERN.NO_MOVE) {\n            this._checkMoveInterval += deltaTime;\n            if (this._checkMoveInterval >= 0.2) {\n                this._checkMoveInterval = 0;\n            \n                if (this._isStopAttack) {\n                    this.playAction({action: constant.MONSTER_ACTION.STOP_MOVE});\n                    console.log(\"###碰到障碍, 停止移动\");\n                } else {\n                    this._prevMoveWorPos.set(this.node.worldPosition);\n                }\n            }\n        }\n    }\n}\n"]}