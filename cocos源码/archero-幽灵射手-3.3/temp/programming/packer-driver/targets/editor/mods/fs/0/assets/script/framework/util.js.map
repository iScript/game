{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/framework/util.ts"],"names":["_decorator","ccclass","property","util","clone","sObj","s","constructor","Array","i","hasOwnProperty","objectToArray","srcObj","resultArr","key","push","arrayToObject","objectKey","resultObj","getWeightRandIndex","weightArr","totalWeight","randWeight","Math","floor","random","sum","weightIndex","length","getRandomNFromM","n","m","array","intRd","count","getRandomInt","flag","min","max","r","rr","getRandom","getStringLength","render","strArr","len","val","charCodeAt","ceil","isEmptyObject","obj","result","Object","isNewDay","dateValue","oldDate","Date","curDate","oldYear","getYear","oldMonth","getMonth","oldDay","getDate","curYear","curMonth","curDay","getPropertyCount","o","difference","diff","indexOf","_stringToArray","string","rsAstralRange","rsZWJ","rsVarRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","reHasUnicode","RegExp","rsFitz","rsOptVar","rsCombo","rsModifier","reOptMod","rsAstral","rsNonAstral","rsRegional","rsSurrPair","rsOptJoin","join","rsSeq","rsSymbol","reUnicode","hasUnicode","test","unicodeToArray","match","asciiToArray","split","simulationUUID","s4","toString","substring","trim","str","replace","isNowValid","start","end","startTime","endTime","getDeltaDays","startYear","getFullYear","startMonth","startDate","endYear","endMonth","endDate","getTime","deltaTime","getMin","Number","formatTwoDigits","time","slice","formatDate","date","fmt","getHours","getMinutes","getSeconds","getMilliseconds","$1","substr","k","getDay","formatName","name","limit","nameArray","formatMoney","money","arrUnit","strValue","idx","formatValue","value","String","fromCharCode","formatTimeForSecond","leftSec","withoutSeconds","timeStr","sec","leftMin","hour","formatTimeForMillisecond","ms","second","minute","rand","arr","arrClone","randomIndex","itemIndex","getOffsetMimutes","offSetTime","formatNumToFixed","num","toFixed","lerp","targetValue","curValue","ratio","v","decrypt","b64Data","decodeData","_base64Decode","encrypt","_base64encode","encodeData","input","keyStr","output","chr1","chr2","chr3","enc1","enc2","enc3","enc4","_utf8Encode","isNaN","charAt","utftext","c","_utf8Decode","c1","c2","c3","shuffle","isArray","newArr","concat","sort","filterDifferentValue","arr1","arr2","filter","item","getBenchmarkLevel","window","wx","sys","getSystemInfoSync","isIOS","system","model","ultraLowPhoneType","lowPhoneType","middlePhoneType","highPhoneType","benchmarkLevel","checkIsLowPhone","checkBenchmark","getRandomItemFromArray","parseStringData","symbol","map","digit","getTwoNodeXZRadius","ndA","ndB","isLocal","aX","position","x","worldPosition","aZ","z","bX","bZ","atan2","getTwoNodeXZLength","getTwoPosXZLength","sqrt","getRandomDirector"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node } from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"util\")\nexport class util {\n    /**\n     * !#zh 拷贝object。\n     */\n    /**\n     * 深度拷贝\n     * @param {any} sObj 拷贝的对象\n     * @returns \n     */\n    public static clone (sObj: any) {\n        if (sObj === null || typeof sObj !== \"object\") {\n            return sObj;\n        }\n\n        let s: {[key: string]: any} = {};\n        if (sObj.constructor === Array) {\n            s = [];\n        }\n\n        for (let i in sObj) {\n            if (sObj.hasOwnProperty(i)) {\n                s[i] = this.clone(sObj[i]);\n            }\n        }\n\n        return s;\n    }\n\n    /**\n     * 将object转化为数组\n     * @param { any} srcObj  \n     * @returns \n     */\n    public static objectToArray (srcObj: {[key: string]: any}) {\n\n        let resultArr: any[] = [];\n\n        // to array\n        for (let key in srcObj) {\n            if (!srcObj.hasOwnProperty(key)) {\n                continue;\n            }\n\n            resultArr.push(srcObj[key]);\n        }\n\n        return resultArr;\n    }\n\n    /**\n     * !#zh 将数组转化为object。\n     */\n    /**\n     * 将数组转化为object。\n     * @param { any} srcObj \n     * @param { string} objectKey \n     * @returns \n     */\n    public static arrayToObject (srcObj: any, objectKey: string) {\n\n        let resultObj: {[key: string]: any}= {};\n\n        // to object\n        for (var key in srcObj) {\n            if (!srcObj.hasOwnProperty(key) || !srcObj[key][objectKey]) {\n                continue;\n            }\n\n            resultObj[srcObj[key][objectKey]] = srcObj[key];\n        }\n\n        return resultObj;\n    }\n\n    /**\n     * 根据权重,计算随机内容\n     * @param {arrany} weightArr \n     * @param {number} totalWeight 权重\n     * @returns \n     */\n    public static getWeightRandIndex (weightArr: [], totalWeight: number) {\n        let randWeight: number = Math.floor(Math.random() * totalWeight);\n        let sum: number = 0;\n        for (var weightIndex: number = 0; weightIndex < weightArr.length; weightIndex++) {\n            sum += weightArr[weightIndex];\n            if (randWeight < sum) {\n                break;\n            }\n        }\n\n        return weightIndex;\n    }\n\n    /**\n     * 从n个数中获取m个随机数\n     * @param {Number} n   总数\n     * @param {Number} m    获取数\n     * @returns {Array} array   获取数列\n     */\n    public static getRandomNFromM (n: number, m: number) {\n        let array: any[] = [];\n        let intRd: number= 0;\n        let count: number= 0;\n\n        while (count < m) {\n            if (count >= n + 1) {\n                break;\n            }\n\n            intRd = this.getRandomInt(0, n);\n            var flag = 0;\n            for (var i = 0; i < count; i++) {\n                if (array[i] === intRd) {\n                    flag = 1;\n                    break;\n                }\n            }\n\n            if (flag === 0) {\n                array[count] = intRd;\n                count++;\n            }\n        }\n\n        return array;\n    }\n\n    /**\n     * 获取随机整数\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns \n     */\n    public static getRandomInt (min: number, max: number) {\n        let r: number= Math.random();\n        let rr: number= r * (max - min + 1) + min;\n        return Math.floor(rr);\n    }\n\n    /**\n     * 获取随机数\n     * @param {Number} min 最小值\n     * @param {Number} max 最大值\n     * @returns \n     */\n    public static getRandom (min: number, max: number) {\n        let r: number= Math.random();\n        let rr: number= r * (max - min + 1) + min;\n        return rr;\n    }\n    \n    /**\n     * 获取字符串长度\n     * @param {string} render \n     * @returns \n     */\n    public static getStringLength (render: string) {\n        let strArr: string = render;\n        let len: number = 0;\n        for (let i: number = 0, n = strArr.length; i < n; i++) {\n            let val: number = strArr.charCodeAt(i);\n            if (val <= 255) {\n                len = len + 1;\n            } else {\n                len = len + 2;\n            }\n        }\n\n        return Math.ceil(len / 2);\n    }\n\n    /**\n     * 判断传入的参数是否为空的Object。数组或undefined会返回false\n     * @param obj\n     */\n    public static isEmptyObject (obj: any) {\n        let result: boolean = true;\n        if (obj && obj.constructor === Object) {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    result = false;\n                    break;\n                }\n            }\n        } else {\n            result = false;\n        }\n\n        return result;\n    }\n\n    /**\n     * 判断是否是新的一天\n     * @param {Object|Number} dateValue 时间对象 todo MessageCenter 与 pve 相关的时间存储建议改为 Date 类型\n     * @returns {boolean}\n     */\n    public static isNewDay (dateValue: any) {\n        // todo：是否需要判断时区？\n        var oldDate: any = new Date(dateValue);\n        var curDate: any = new Date();\n\n        //@ts-ignore\n        var oldYear = oldDate.getYear();\n        var oldMonth = oldDate.getMonth();\n        var oldDay = oldDate.getDate();\n        //@ts-ignore\n        var curYear = curDate.getYear();\n        var curMonth = curDate.getMonth();\n        var curDay = curDate.getDate();\n\n        if (curYear > oldYear) {\n            return true;\n        } else {\n            if (curMonth > oldMonth) {\n                return true;\n            } else {\n                if (curDay > oldDay) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * 获取对象属性数量\n     * @param {object}o 对象\n     * @returns \n     */\n    public static getPropertyCount(o: Object) {\n        var n, count = 0;\n        for (n in o) {\n            if (o.hasOwnProperty(n)) {\n                count++;\n            }\n        }\n        return count;\n    }\n\n    /**\n     * 返回一个差异化数组（将array中diff里的值去掉）\n     * @param array\n     * @param diff\n     */\n    public static difference (array: [], diff: any) {\n        let result: any[] = [];\n        if (array.constructor !== Array || diff.constructor !== Array) {\n            return result;\n        }\n\n        let length = array.length;\n        for (let i: number= 0; i < length; i++) {\n            if (diff.indexOf(array[i]) === -1) {\n                result.push(array[i]);\n            }\n        }\n\n        return result;\n    }\n\n\n    public static _stringToArray (string: string) {\n        // 用于判断emoji的正则们\n        var rsAstralRange = '\\\\ud800-\\\\udfff';\n        var rsZWJ = '\\\\u200d';\n        var rsVarRange = '\\\\ufe0e\\\\ufe0f';\n        var rsComboMarksRange = '\\\\u0300-\\\\u036f';\n        var reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f';\n        var rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff';\n        var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n        var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\n\n        var rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]';\n        var rsOptVar = '[' + rsVarRange + ']?';\n        var rsCombo = '[' + rsComboRange + ']';\n        var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';\n        var reOptMod = rsModifier + '?';\n        var rsAstral = '[' + rsAstralRange + ']';\n        var rsNonAstral = '[^' + rsAstralRange + ']';\n        var rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}';\n        var rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]';\n        var rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';\n        var rsSeq = rsOptVar + reOptMod + rsOptJoin;\n        var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n        var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n        var hasUnicode = function (val: any) {\n            return reHasUnicode.test(val);\n        };\n\n        var unicodeToArray = function (val: any) {\n            return val.match(reUnicode) || [];\n        };\n\n        var asciiToArray = function (val: any) {\n            return val.split('');\n        };\n\n        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n    }\n\n    // 模拟传msg的uuid\n    public static simulationUUID () {\n        function s4() {\n            return Math.floor((1 + Math.random()) * 0x10000)\n                .toString(16)\n                .substring(1);\n        }\n\n        return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\n            s4() + '-' + s4() + s4() + s4();\n    }\n\n    public static trim (str: string) {\n        return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    }\n\n    /**\n     * 判断当前时间是否在有效时间内\n     * @param {String|Number} start 起始时间。带有时区信息\n     * @param {String|Number} end 结束时间。带有时区信息\n     */\n    public static isNowValid (start: any, end: any) {\n        var startTime = new Date(start);\n        var endTime = new Date(end);\n        var result = false;\n\n        if (startTime.getDate() + '' !== 'NaN' && endTime.getDate() + '' !== 'NaN') {\n            var curDate = new Date();\n            result = curDate < endTime && curDate > startTime;\n        }\n\n        return result;\n    }\n\n    /**\n     * 返回相隔天数\n     * @param start \n     * @param end \n     * @returns \n     */\n    public static getDeltaDays (start: any, end: any) {\n        start = new Date(start);\n        end = new Date(end);\n\n        let startYear: number= start.getFullYear();\n        let startMonth: number= start.getMonth() + 1;\n        let startDate: number= start.getDate();\n        let endYear: number= end.getFullYear();\n        let endMonth: number= end.getMonth() + 1;\n        let endDate: number= end.getDate();\n\n        start = new Date(startYear + '/' + startMonth + '/' + startDate + ' GMT+0800').getTime();\n        end = new Date(endYear + '/' + endMonth + '/' + endDate + ' GMT+0800').getTime();\n\n        let deltaTime = end - start;\n        return Math.floor(deltaTime / (24 * 60 * 60 * 1000));\n    }\n\n    /**\n     * 获取数组最小值\n     * @param array 数组\n     * @returns \n     */\n    public static getMin (array: number[]) {\n        let result: number = null!;\n        if (array.constructor === Array) {\n            let length = array.length;\n            for (let i = 0; i < length; i++) {\n                if (i === 0) {\n                    result = Number(array[0]);\n                } else {\n                    result = result > Number(array[i]) ? Number(array[i]) : result;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * 格式化两位小数点\n     * @param time \n     * @returns \n     */\n    public static formatTwoDigits (time: number) {\n        //@ts-ignore\n        return (Array(2).join(0)+time).slice(-2);\n    }\n\n    /**\n     * 根据格式返回时间\n     * @param date  时间\n     * @param fmt 格式\n     * @returns \n     */\n    public static formatDate (date: Date, fmt: string) {\n        let o = {\n            \"M+\": date.getMonth() + 1, //月份\n            \"d+\": date.getDate(), //日\n            \"h+\": date.getHours(), //小时\n            \"m+\": date.getMinutes(), //分\n            \"s+\": date.getSeconds(), //秒\n            \"q+\": Math.floor((date.getMonth() + 3) / 3), //季度\n            \"S\": date.getMilliseconds() //毫秒\n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (let k in o)\n            //@ts-ignore\n            if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\n        return fmt;\n    }\n\n    /**\n     * 获取格式化后的日期（不含小时分秒）\n     */\n    public static getDay () {\n        let date: Date = new Date();\n\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate();\n    }\n\n    /**\n     * 格式化名字，XXX...\n     * @param {string} name 需要格式化的字符串 \n     * @param {number}limit \n     * @returns {string} 返回格式化后的字符串XXX...\n     */\n    public static formatName (name: string, limit: number) {\n        limit = limit || 6;\n        var nameArray = this._stringToArray(name);\n        var str = '';\n        var length = nameArray.length;\n        if (length > limit) {\n            for (var i = 0; i < limit; i++) {\n                str += nameArray[i];\n            }\n\n            str += '...';\n        } else {\n            str = name;\n        }\n\n        return str;\n    }\n\n    /**\n     * 格式化钱数，超过10000 转换位 10K   10000K 转换为 10M\n     * @param {number}money 需要被格式化的数值\n     * @returns {string}返回 被格式化的数值\n     */\n    public static formatMoney (money: number) {\n        let arrUnit: string[] = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z', 'Y', 'B', 'N', 'D'];\n\n        let strValue: string = '';\n        for (let idx: number = 0; idx < arrUnit.length; idx++) {\n            if (money >= 10000) {\n                money /= 1000;\n            } else {\n                strValue = Math.floor(money) + arrUnit[idx];\n                break;\n            }\n        }\n\n        if (strValue === '') {\n            strValue = Math.floor(money) + 'U'; //超过最大值就加个U\n        }\n\n        return strValue;\n    }\n\n    /**\n     * 格式化数值\n     * @param {number}value 需要被格式化的数值\n     * @returns {string}返回 被格式化的数值\n     */\n    public static formatValue (value: number) {\n        let arrUnit: string[] = [];\n        let strValue: string= '';\n        for(let i=0;i<26;i++){\n            arrUnit.push(String.fromCharCode(97+i));\n        }\n\n        for (let idx: number= 0; idx < arrUnit.length; idx++) {\n            if (value >= 10000) {\n                value /= 1000;\n            } else {\n                strValue = Math.floor(value) + arrUnit[idx]; \n                break;      \n            }\n        }\n\n        return strValue;\n    }\n\n    /**\n     * 根据剩余秒数格式化剩余时间 返回 HH:MM:SS\n     * @param {Number} leftSec \n     */\n    public static formatTimeForSecond (leftSec: number, withoutSeconds: boolean = false) {\n        let timeStr: string= '';\n        let sec: number= leftSec % 60;\n    \n        let leftMin: number= Math.floor(leftSec / 60);\n        leftMin = leftMin < 0 ? 0 : leftMin;\n    \n        let hour: number= Math.floor(leftMin / 60);\n        let min: number= leftMin % 60;\n    \n        if (hour > 0) {\n            timeStr += hour > 9 ? hour.toString() : '0' + hour;\n            timeStr += ':';\n        } else {\n            timeStr += '00:';\n        }\n        \n        timeStr += min > 9 ? min.toString() : '0' + min;\n\n        if (!withoutSeconds) {\n            timeStr += ':';\n            timeStr += sec > 9 ? sec.toString() : '0' + sec;\n        }\n       \n        return timeStr;\n    }\n\n    /**\n     *  根据剩余毫秒数格式化剩余时间 返回 HH:MM:SS\n     *\n     * @param {Number} ms\n     */\n    public static formatTimeForMillisecond(ms: number): Object {\n        let second: number= Math.floor(ms / 1000 % 60);\n        let minute: number= Math.floor(ms / 1000 / 60 % 60);\n        let hour: number= Math.floor(ms / 1000 / 60 / 60);\n        return {'hour': hour, 'minute': minute, 'second': second };\n    }\n\n    /**\n     * 将数组内容进行随机排列\n     * @param {Array}arr 需要被随机的数组 \n     * @returns \n     */\n    public static rand(arr: []): [] {\n        let arrClone = this.clone(arr);\n        // 首先从最大的数开始遍历，之后递减\n        for (let i: number = arrClone.length - 1; i >= 0; i--) {\n            // 随机索引值randomIndex是从0-arrClone.length中随机抽取的\n            const randomIndex: number = Math.floor(Math.random() * (i + 1));\n            // 下面三句相当于把从数组中随机抽取到的值与当前遍历的值互换位置\n            const itemIndex: number = arrClone[randomIndex];\n            arrClone[randomIndex] = arrClone[i];\n            arrClone[i] = itemIndex;\n        }\n        // 每一次的遍历都相当于把从数组中随机抽取（不重复）的一个元素放到数组的最后面（索引顺序为：len-1,len-2,len-3......0）\n        return arrClone;\n    }\n\n    /**\n     * 获得开始和结束两者之间相隔分钟数\n     *\n     * @static\n     * @param {number} start\n     * @param {number} end\n     * @memberof Util\n     */\n    public static getOffsetMimutes (start: number, end: number) {\n        let offSetTime : number = end - start;\n        let minute: number = Math.floor((offSetTime % (1000 * 60 * 60)) / (1000 * 60));\n        return minute;\n    }\n\n    /**\n     * 返回指定小数位的数值\n     * @param {number} num \n     * @param {number} idx \n     */\n    public static formatNumToFixed (num: number, idx: number = 0) {\n        return Number(num.toFixed(idx));\n    }\n\n    /**\n     * 用于数值到达另外一个目标数值之间进行平滑过渡运动效果\n     * @param {number} targetValue 目标数值 \n     * @param {number} curValue 当前数值\n     * @param {number} ratio    过渡比率\n     * @returns \n     */\n    public static lerp (targetValue: number, curValue: number, ratio: number = 0.25) {\n        let v: number = curValue;\n        if (targetValue > curValue) {\n            v = curValue + (targetValue - curValue) * ratio;\n        } else if (targetValue < curValue) {\n            v = curValue - (curValue - targetValue) * ratio;\n        }\n        \n        return v;\n    }\n\n    /**\n     * 数据解密\n     * @param {String} str \n     */\n    public static decrypt (b64Data: string) {\n        let n: number= 6;\n        if (b64Data.length % 2 === 0) {\n            n = 7;\n        }\n\n        let decodeData = '';\n        for (var idx = 0; idx < b64Data.length - n; idx += 2) {\n            decodeData += b64Data[idx + 1];\n            decodeData += b64Data[idx];\n        }\n\n        decodeData += b64Data.slice(b64Data.length - n + 1);\n\n        decodeData = this._base64Decode(decodeData);\n\n        return decodeData;\n    }\n\n        /**\n     * 数据加密\n     * @param {String} str \n     */\n    public static encrypt (str: string) {\n        let b64Data = this._base64encode(str);\n\n        let n: number = 6;\n        if (b64Data.length % 2 === 0) {\n            n = 7;\n        }\n\n        let encodeData: string= '';\n\n        for (let idx = 0; idx < (b64Data.length - n + 1) / 2; idx++) {\n            encodeData += b64Data[2*idx+1];\n            encodeData += b64Data[2*idx];\n        }\n\n        encodeData += b64Data.slice(b64Data.length - n + 1);\n\n        return encodeData;\n    }\n\n    //public method for encoding\n    /**\n     * base64加密\n     * @param {string}input \n     * @returns \n     */\n    private static _base64encode (input: string) {\n        let keyStr :string= \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        let output :string= \"\", chr1: number, chr2: number, chr3: number, enc1: number, enc2: number, enc3: number, enc4: number, i: number= 0;\n        input = this._utf8Encode(input);\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n            if (isNaN(chr2)) {\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output +\n                keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\n        }\n        return output;\n    }\n\n    /**\n     * utf-8 加密\n     * @param string \n     * @returns \n     */\n    private static _utf8Encode (string: string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        let utftext: string= \"\";\n        for (let n: number = 0; n < string.length; n++) {\n            let c: number = string.charCodeAt(n);\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n        return utftext;\n    }\n\n    /**\n     * utf-8解密\n     * @param utftext \n     * @returns \n     */\n    private static _utf8Decode (utftext: string) {\n        let string = \"\";\n        let i: number= 0;\n        let c: number= 0;\n        let c1: number= 0;\n        let c2: number= 0;\n        let c3: number= 0;\n        while ( i < utftext.length ) {\n            c = utftext.charCodeAt(i);\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i+1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i+1);\n                c3 = utftext.charCodeAt(i+2);\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n                i += 3;\n            }\n        }\n        return string;\n    }\n\n    /**\n     * base64解密\n     * @param {string}input 解密字符串\n     * @returns \n     */\n    private static _base64Decode (input: string) {\n        let keyStr: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        let output: string = \"\";\n        let chr1: number;\n        let chr2: number;\n        let chr3: number;\n        let enc1: number;\n        let enc2: number;\n        let enc3: number;\n        let enc4: number;\n        let i: number= 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 != 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 != 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }\n        output = this._utf8Decode(output);\n        return output;\n    }\n\n    /**\n     * 洗牌函数\n     *\n     * @static\n     * @param {*} arr\n     * @returns\n     * @memberof util\n     */\n    public static shuffle (arr: any) {\n        if (Array.isArray(arr)) {\n            let newArr: any = arr.concat();\n            newArr.sort(()=>{ return 0.5 - Math.random()});\n            return newArr;\n        }\n    }\n\n    /**\n     * 两个数值数组取相同的值，返回一个新数组\n     *\n     * @static\n     * @param {number[]} arr1\n     * @param {number[]} arr2\n     * @returns\n     * @memberof util\n     */\n    public static filterDifferentValue (arr1: number[], arr2: number[]) {\n        let arr: number[] = [];\n        arr = arr1.filter((item: number)=>{\n            return arr2.indexOf(item) !== -1;\n        })\n\n        return arr;\n    }\n\n    /**\n     * 获取性能等级\n     * -Android\n     * 设备性能等级，取值为：\n     * -2 或 0（该设备无法运行小游戏）\n     * -1（性能未知）\n     * >=1（设备性能值，该值越高，设备性能越好，目前最高不到50)\n     * -IOS\n     * 微信不支持IO性能等级\n     * iPhone 5s 及以下\n     * 设定为超低端机 benchmarkLevel = 5\n     * iPhone 6 ～ iPhone SE\n     * 设定为超低端机 benchmarkLevel = 15\n     * iPhone 7 ~ iPhone X\n     * 设定为中端机 benchmarkLevel = 25\n     * iPhone XS 及以上\n     * 设定为高端机 benchmarkLevel = 40\n     * -H5或其他\n     * -1（性能未知）\n     */\n     public static getBenchmarkLevel(): Number {\n        //@ts-ignore\n        if (window.wx) {\n            //@ts-ignore\n            const sys = window.wx.getSystemInfoSync();\n            const isIOS = sys.system.indexOf('iOS') >= 0;\n            if (isIOS) {\n                const model = sys.model;\n                // iPhone 5s 及以下\n                const ultraLowPhoneType = ['iPhone1,1', 'iPhone1,2', 'iPhone2,1', 'iPhone3,1', 'iPhone3,3', 'iPhone4,1', 'iPhone5,1', 'iPhone5,2', 'iPhone5,3', 'iPhone5,4', 'iPhone6,1', 'iPhone6,2'];\n                // iPhone 6 ~ iPhone SE\n                const lowPhoneType = ['iPhone6,2', 'iPhone7,1', 'iPhone7,2', 'iPhone8,1', 'iPhone8,2', 'iPhone8,4'];\n                // iPhone 7 ~ iPhone X\n                const middlePhoneType = ['iPhone9,1', 'iPhone9,2', 'iPhone9,3', 'iPhone9,4', 'iPhone10,1', 'iPhone10,2', 'iPhone10,3', 'iPhone10,4', 'iPhone10,5', 'iPhone10,6'];\n                // iPhone XS 及以上\n                const highPhoneType = ['iPhone11,2', 'iPhone11,4', 'iPhone11,6', 'iPhone11,8', 'iPhone12,1', 'iPhone12,3', 'iPhone12,5', 'iPhone12,8'];\n                for (let i = 0; i < ultraLowPhoneType.length; i++) {\n                    if (model.indexOf(ultraLowPhoneType[i]) >= 0)\n                        return 5;\n                }\n                for (let i = 0; i < lowPhoneType.length; i++) {\n                    if (model.indexOf(lowPhoneType[i]) >= 0)\n                        return 10;\n                }\n                for (let i = 0; i < middlePhoneType.length; i++) {\n                    if (model.indexOf(middlePhoneType[i]) >= 0)\n                        return 20;\n                }\n                for (let i = 0; i < highPhoneType.length; i++) {\n                    if (model.indexOf(highPhoneType[i]) >= 0)\n                        return 30;\n                }\n                return -1;\n            } else {\n                return sys.benchmarkLevel;\n            }\n        } else {\n            return 50;\n        }\n    }\n\n    /**\n     * 低端机判断\n     */\n    public static checkIsLowPhone () {\n        let checkBenchmark = 22; //判断低端机的性能等级\n\n        return util.getBenchmarkLevel() < checkBenchmark\n    }\n\n    /**\n     * 获取数组中随机一个元素\n     * @param arr \n     * @returns \n     */\n    public static getRandomItemFromArray (arr: any[]) {\n        return arr[Math.floor(Math.random() * arr.length)];\n    }\n\n    /**\n     * 解析数据表带有#或者,连接的数据\n     *\n     * @static\n     * @param {string} str\n     * @param {string} [symbol=\"#\"]\n     * @return {*} \n     * @memberof util\n     */\n    public static parseStringData (str: string, symbol: string = \"#\"): any[] {\n        let arr: any[] = str.split(symbol);\n        return arr.map((item: any)=>{\n            return Number(item);\n        })\n    }   \n\n    /**\n     * 返回精确到若干位数的数值\n     *\n     * @static\n     * @param {number} v\n     * @param {number} digit\n     * @memberof util\n     */\n    public static toFixed (v: number, digit: number = 2) {\n        return Number(v.toFixed(digit));\n    }\n\n    /**\n     * 获取两个节点的xz坐标的弧度\n     *\n     * @static\n     * @param {Node} ndA\n     * @param {Node} ndB\n     * @param {boolean} [isLocal=false] 是否为本地坐标，反之为世界坐标\n     * @return {*} \n     * @memberof util\n     */\n    public static getTwoNodeXZRadius(ndA: Node, ndB: Node, isLocal: boolean = false) {\n        const aX = isLocal ? ndA.position.x : ndA.worldPosition.x;\n        const aZ = isLocal ? ndA.position.z : ndA.worldPosition.z;\n        const bX = isLocal ? ndB.position.x : ndB.worldPosition.x;\n        const bZ = isLocal ? ndB.position.z : ndB.worldPosition.z;\n        return Math.atan2(aX - bX, aZ - bZ);\n    }\n\n    /**\n     * 获取两个节点坐标在xz轴的距离\n     *\n     * @static\n     * @param {Node} ndA\n     * @param {Node} ndB\n     * @param {boolean} [isLocal=false] 是否为本地坐标，反之为世界坐标\n     * @return {*} \n     * @memberof util\n     */\n    public static getTwoNodeXZLength(ndA: Node, ndB: Node, isLocal: boolean = false) {\n        const aX = isLocal ? ndA.position.x : ndA.worldPosition.x;\n        const aZ = isLocal ? ndA.position.z : ndA.worldPosition.z;\n        const bX = isLocal ? ndB.position.x : ndB.worldPosition.x;\n        const bZ = isLocal ? ndB.position.z : ndB.worldPosition.z;\n        return this.getTwoPosXZLength(aX, aZ, bX, bZ);\n    }\n\n    /**\n     * 获取两个坐标在xz轴的距离\n     * \n     * @static\n     * @param {number} aX\n     * @param {number} aZ\n     * @param {number} bX\n     * @param {number} bZ\n     * @return {*} \n     * @memberof util\n     */\n    public static getTwoPosXZLength(aX: number, aZ: number, bX: number, bZ: number) {\n        const x = aX - bX;\n        const z = aZ - bZ;\n        return Math.sqrt(x * x + z * z);\n    }\n\n    /***\n     * 返回随机方向\n     */\n    public static getRandomDirector () {\n        let v = Math.random(); \n        return v > 0.5 ? 1 : -1\n    }\n}"]}