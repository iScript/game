{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/framework/resourceUtil.ts"],"names":["_decorator","Prefab","SpriteFrame","resources","error","Texture2D","instantiate","isValid","find","ccclass","resourceUtil","loadRes","url","type","cb","load","err","res","message","loadEffectRes","modulePath","Promise","resolve","reject","prefab","console","loadModelRes","loadModelResArr","path","arrName","progressCb","completeCb","arrUrls","map","item","loadSpriteFrameRes","img","texture","image","sf","getMap","level","levelStr","txtAsset","content","_file","window","decompressFromEncodedURIComponent","objJson","JSON","parse","text","json","getMapObj","idx","length","push","getUIPrefabRes","prefabPath","createUI","parent","node","setPosition","addChild","getJsonData","fileName","getTextData","setSpriteFrame","sprite","spriteFrame"],"mappings":"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","sourcesContent":["import { _decorator, Prefab, Node, SpriteComponent, SpriteFrame, ImageAsset, resources, error, Texture2D, instantiate, isValid, find, TextAsset, JsonAsset } from \"cc\";\nconst { ccclass } = _decorator;\n\n@ccclass(\"resourceUtil\")\nexport class resourceUtil {\n        /**\n     * 加载资源\n     * @param url   资源路径\n     * @param type  资源类型\n     * @param cb    回调\n     * @method loadRes\n     */\n    public static loadRes (url: string, type: any, cb: Function = ()=>{}) {\n        resources.load(url, (err: any, res: any)=>{\n            if (err) {\n                error(err.message || err);\n                cb(err, res);\n                return;\n            }\n\n            cb && cb(null, res);\n        })\n    }\n\n    /**\n     * 获取特效prefab\n     * @param modulePath 路径\n     * @returns \n     */\n    public static loadEffectRes (modulePath: string) {\n        return new Promise((resolve, reject)=>{\n            this.loadRes(`prefab/effect/${modulePath}`, Prefab, (err: any, prefab: Prefab)=>{\n                if (err) {\n                    console.error('effect load failed', modulePath);\n                    reject && reject();\n                    return;\n                } \n\n                resolve && resolve(prefab);\n            })\n        })\n    }\n\n    /**\n     * 获取模型数据\n     * @param modulePath 模型路径\n     * @returns \n     */\n    public static loadModelRes (modulePath: string) {\n        return new Promise((resolve, reject)=>{\n            this.loadRes(`prefab/model/${modulePath}`, Prefab, (err: any, prefab: Prefab)=>{\n                if (err) {\n                    console.error(\"model load failed\", modulePath);\n                    reject && reject();\n                    return;\n                }\n\n                resolve && resolve(prefab);\n            })\n        })\n    }\n\n    /**\n     * 获取多模型数据\n     * @param path 资源路径\n     * @param arrName 资源名称\n     * @param progressCb 过程回调函数\n     * @param completeCb 完成回调函数\n     */\n    public static loadModelResArr (path: string ,arrName: Array<string>, progressCb: any, completeCb: any) {\n        let arrUrls = arrName.map((item)=>{\n            return `${path}/${item}`;\n        })\n        \n        resources.load(arrUrls, Prefab, progressCb, completeCb);\n    }\n\n    /**\n     * 获取贴图资源\n     * @param path 贴图路径\n     * @returns \n     */\n    public static loadSpriteFrameRes(path: string) {\n        return new Promise((resolve, reject)=>{\n            this.loadRes(path, SpriteFrame, (err: any, img: ImageAsset)=>{\n                if (err) {\n                    console.error('spriteFrame load failed!', path, err);\n                    reject && reject();\n                    return;\n                }\n\n                let texture = new Texture2D();\n                texture.image = img;\n\n                let sf = new SpriteFrame();\n                sf.texture = texture;\n    \n                resolve && resolve(sf);\n            })\n        })\n    }\n\n    /**\n     * 获取关卡数据\n     * @param level 关卡\n     * @param cb 回调函数\n     */\n    public static getMap (level: number, cb: Function) {\n        let levelStr: string = 'map';\n        //前面补0\n        if (level >= 100) {\n            levelStr += level;\n        } else if (level >= 10) {\n            levelStr += '0' + level;\n        } else {\n            levelStr += '00' + level;\n        }\n\n        this.loadRes(`map/config/${levelStr}`, null, (err: {}, txtAsset: any)=>{\n            if (err) {\n                cb(err, txtAsset);\n                return;\n            }\n\n            let content: string = '';\n            if (txtAsset._file) {\n                //@ts-ignore\n                if (window['LZString']) {\n                    //@ts-ignore\n                    content = window['LZString'].decompressFromEncodedURIComponent(txtAsset._file);\n                }\n                var objJson = JSON.parse(content);\n                cb(null, objJson);\n            } else if (txtAsset.text) {\n                //@ts-ignore\n                if (window['LZString']) {\n                    //@ts-ignore\n                    content = window['LZString'].decompressFromEncodedURIComponent(txtAsset.text);\n                }\n                var objJson = JSON.parse(content);\n                cb(null, objJson);\n            } else if (txtAsset.json) {\n                cb(null, txtAsset.json);\n            } else {\n                cb('failed');\n            }\n        });\n    }\n\n    /**\n     * 获取关卡数据\n     * @param type 关卡类型\n     * @param arrName 资源名称\n     * @param progressCb 过程回调函数\n     * @param completeCb 完成回调函数\n     */\n    public static getMapObj(type: string, arrName: Array<string>, progressCb?:any, completeCb?:any) {\n        let arrUrls: string[] = [];\n        for (let idx = 0; idx < arrName.length; idx++) {\n            arrUrls.push(`map/${type}/${arrName[idx]}`)\n        }\n\n        resources.load(arrUrls, Prefab, progressCb, completeCb);\n    }\n\n    /**\n     * 获取UI prefab\n     * @param prefabPath prefab路径 \n     * @param cb 回调函数\n     */\n    public static getUIPrefabRes (prefabPath: string, cb?: Function) {\n        this.loadRes(\"prefab/ui/\" + prefabPath, Prefab, cb);\n    }\n\n    /**\n     * 创建ui界面\n     * @param path ui路径\n     * @param cb 回调函数\n     * @param parent 父节点\n     */\n    public static createUI (path: string, cb?: Function, parent?: Node) {\n        this.getUIPrefabRes(path, function (err: {}, prefab: Prefab) {\n            if (err) return;\n            let node: Node = instantiate(prefab);\n            node.setPosition(0, 0, 0);\n            if (!parent) {\n                parent = find(\"Canvas\") as Node;\n            }\n\n            parent.addChild(node);\n            cb && cb(null, node);\n        });\n    }\n\n    /**\n     * 获取json数据\n     * @param fileName 文件名\n     * @param cb 回调函数 \n     */\n    public static getJsonData (fileName: string, cb: Function) {\n        this.loadRes(\"datas/\" + fileName, null, function (err: any, content: JsonAsset) {\n            if (err) {\n                error(err.message || err);\n                return;\n            }\n\n            if (content.json) {\n                cb(err, content.json);\n            } else {\n                cb('failed!!!');\n            }\n        });\n    }\n\n    /**\n     * 获取文本数据\n     * @param fileName 文件名\n     * @param cb  回调函数\n     */\n    public static getTextData (fileName:string, cb: Function) {\n        this.loadRes(\"datas/\" + fileName,  null, function (err: any, content: TextAsset) {\n            if (err) {\n                error(err.message || err);\n                return;\n            }\n\n            let text: string = content.text;\n            cb(err, text);\n        });\n    }\n\n    /**\n     * 设置精灵贴图\n     * @param path 资源路径\n     * @param sprite 精灵\n     * @param cb 回调函数\n     */\n    public static setSpriteFrame (path: string, sprite: SpriteComponent, cb: Function) {\n        this.loadRes(path + '/spriteFrame', SpriteFrame, (err: any, spriteFrame: SpriteFrame)=> {\n            if (err) {\n                console.error('set sprite frame failed! err:', path, err);\n                cb(err);\n                return;\n            }\n\n            if (sprite && isValid(sprite)) {\n                sprite.spriteFrame = spriteFrame;\n                cb(null);\n            }\n        });\n    } \n}\n"]}