{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/framework/playerData.ts"],"names":["_decorator","Component","util","constant","localConfig","StorageManager","clientEvent","ccclass","property","playerData","instance","_instance","userId","_userId","v","settings","_settings","playerInfo","_playerInfo","history","_history","isNewBee","_isNewBee","isPlayerSkillAllUnlock","arrSkill","getTableArr","length","loadGlobalCache","getUserId","loadFromCache","_loadDataByKey","LOCAL_CACHE","PLAYER","HISTORY","SETTINGS","keyName","ret","str","getConfigData","JSON","parse","e","createPlayerInfo","loginData","diamond","gold","key","level","highestLevel","createDate","Date","savePlayerInfoToLocalCache","generateRandomAccount","now","getRandomInt","setUserId","saveAccount","setConfigData","stringify","saveSettingsToLocalCache","saveAll","setConfigDataWithoutSave","DATA_VERSION","_dataVersion","updatePlayerInfo","value","isChanged","hasOwnProperty","getSetting","setSetting","clear","addFightTimes","times","fightTimes","getFightTimes","SETTINGS_KEY","FIGHT_TIMES","getLockPlyerSkill","arrLock","filter","item","includes","ID","PLAYER_SKILL","RECOVERY","addPlayerSkill","info","push","dispatchEvent","EVENT_TYPE","PARSE_PLAYER_SKILL","reducePlayerSkill","idx","findIndex","splice"],"mappings":"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","sourcesContent":["import { util } from './util';\nimport { _decorator, Component } from \"cc\";\nimport { constant } from \"./constant\";\nimport { localConfig } from \"./localConfig\";\nimport { StorageManager } from \"./storageManager\";\nimport { clientEvent } from './clientEvent';\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"playerData\")\nexport class playerData extends Component {\n    /* class member could be defined like this */\n    // dummy = '';\n\n    static _instance: playerData;\n    \n\n    public static get instance () {\n        if (this._instance) {\n            return this._instance;\n        }\n\n        this._instance = new playerData();\n        return this._instance;\n    }\n\n    public serverTime: number = 0;\n    public localTime: number = 0;\n\n    private _userId: string = '';\n    private _playerInfo: any = null;\n    private _history: any = null;\n    private _settings: any = null;\n    private _isNewBee: boolean = false;    //默认非新手\n    private _dataVersion: string = '';\n\n    public get userId () {\n        return this._userId;\n    }\n\n    public set userId (v: string) {\n        this._userId = v;\n    }\n\n    public get settings () {\n        return this._settings;\n    }\n\n    public set settings (v: any) {\n        this._settings = v;\n    }\n\n    public get playerInfo () {\n        return this._playerInfo;\n    }\n\n    public set playerInfo (v: any) {\n        this._playerInfo = v;\n    }\n\n    public get history () {\n        return this._history;\n    }\n\n    public set history (v: any) {\n        this._history = v;\n    }\n\n    public get isNewBee () {\n        return this._isNewBee;\n    }\n\n    public set isNewBee (v: boolean) {\n        this._isNewBee = v;\n    }\n\n    //是否已经解锁完成所有技能\n    public get isPlayerSkillAllUnlock () {\n        let arrSkill = localConfig.instance.getTableArr(\"playerSkill\");\n        //生命回复技能不在技能列表里面出现，而是在游戏内多次出现，所以减去1\n        return this.playerInfo.arrSkill.length === arrSkill.length - 1;\n    }\n\n    /**\n     * 加上用户数据\n     */\n    public loadGlobalCache() {\n        let userId: string = StorageManager.instance.getUserId();\n        if (userId) {\n            this._userId = userId;\n        }\n    }\n\n    /**\n     * 加载本地存储数据\n     */\n    public loadFromCache() {\n        //读取玩家基础数据\n        this._playerInfo = this._loadDataByKey(constant.LOCAL_CACHE.PLAYER);\n        this._history = this._loadDataByKey(constant.LOCAL_CACHE.HISTORY);\n        this._settings = this._loadDataByKey(constant.LOCAL_CACHE.SETTINGS);\n    }\n\n    /**\n     * 获取本地存储数据\n     * @param {string}keyName \n     * @returns \n     */\n    private _loadDataByKey (keyName: any) {\n        let ret = {};\n        let str = StorageManager.instance.getConfigData(keyName);\n        if (str) {\n            try {\n                ret = JSON.parse(str);\n            } catch (e) {\n                ret = {};\n            }\n        } \n        \n        return ret;\n    }\n\n    /**\n     * 创建角色数据\n     * @param loginData \n     */\n    public createPlayerInfo(loginData?:any) {\n        this._playerInfo = {\n            diamond: 0, //钻石总数\n            gold: 0,//金币数量\n            key: 0, //钥匙数量\n            level: 1,  //当前层级\n            highestLevel: 1,//已经解锁的最高层级\n            arrSkill:[],//已经解锁的玩家技能ID\n            createDate: new Date(), //记录创建时间\n        };\n        \n        this._isNewBee = true; //区分新老玩家\n\n        if (loginData) {\n            for (let key in loginData) {\n                this._playerInfo[key] = loginData[key];\n            }\n        }\n\n        this.savePlayerInfoToLocalCache();\n    }\n\n    /**\n     * 生成随机账户\n     * @returns\n     */\n     public generateRandomAccount () {\n        this.userId = `${Date.now()}${util.getRandomInt(0, 1000)}`;\n        StorageManager.instance.setUserId(this._userId);\n    }\n\n    /**\n     * 存用户数据\n     * @param userId \n     */\n    public saveAccount(userId: any) {\n        this._userId = userId;\n        StorageManager.instance.setUserId(userId);\n    }\n\n    /**\n     * 保存玩家数据\n     */\n     public savePlayerInfoToLocalCache() {\n        StorageManager.instance.setConfigData(constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n    }\n    \n    /**\n     * 保存玩家设置相关信息\n     */\n    public saveSettingsToLocalCache () {\n        StorageManager.instance.setConfigData(constant.LOCAL_CACHE.SETTINGS, JSON.stringify(this._settings));\n    }\n\n    /**\n     * 当数据同步完毕，即被覆盖的情况下，需要将数据写入到本地缓存，以免数据丢失\n     */\n     public saveAll() {\n        StorageManager.instance.setConfigDataWithoutSave(constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n        StorageManager.instance.setConfigDataWithoutSave(constant.LOCAL_CACHE.HISTORY, JSON.stringify(this._history));\n        StorageManager.instance.setConfigDataWithoutSave(constant.LOCAL_CACHE.SETTINGS, JSON.stringify(this._settings));\n        StorageManager.instance.setConfigData(constant.LOCAL_CACHE.DATA_VERSION, this._dataVersion);\n    }\n\n    /**\n     * 更新用户信息\n     * 例如钻石、金币、道具\n     * @param {String} key\n     * @param {Number} value\n     */\n    public updatePlayerInfo(key:string, value: any) {\n        let isChanged: boolean= false;\n        if (this._playerInfo.hasOwnProperty(key)) {\n            if (typeof value === 'number') {\n                isChanged = true;\n                this._playerInfo[key] += value;\n                if (this._playerInfo[key] < 0) {\n                    this._playerInfo[key] = 0;\n                }\n                //return;\n            } else if (typeof value === 'boolean' || typeof value === 'string') {\n                isChanged = true;\n                this._playerInfo[key] = value;\n            }\n        }\n        if (isChanged) {\n            //有修改就保存到localcache\n            StorageManager.instance.setConfigData(constant.LOCAL_CACHE.PLAYER, JSON.stringify(this._playerInfo));\n        }\n    }\n    \n    /**\n     * 获取玩家杂项值\n     * @param {string} key \n     */\n    public getSetting (key: string) {\n        if (!this._settings) {\n            return null;\n        }\n\n        if (!this._settings.hasOwnProperty(key)) {\n            return null;\n        }\n\n        return this._settings[key];\n    }\n\n    /**\n     * 设置玩家杂项值\n     * @param {string} key \n     * @param {*} value \n     */\n    public setSetting (key: string, value: any) {\n        if (!this._settings) {\n            this._settings = {};\n        }\n\n        this._settings[key] = value;\n\n        this.saveSettingsToLocalCache();\n    }\n\n    /**\n     * 清除用户信息\n     */\n    public clear () {\n        this._playerInfo = {};\n        this._settings = {};\n        this.saveAll();\n    }\n\n    /**\n     * 增加战斗次数\n     * @param times \n     */\n    public addFightTimes (times: number = 1) {\n        let fightTimes = this.getFightTimes();\n\n        fightTimes += 1;\n        this.setSetting(constant.SETTINGS_KEY.FIGHT_TIMES, fightTimes);\n    }\n\n    /**\n     * 获取战斗次数\n     * @returns \n     */\n    public getFightTimes () {\n        let fightTimes = this.getSetting(constant.SETTINGS_KEY.FIGHT_TIMES);\n\n        if (!fightTimes) {\n            fightTimes = 0;\n            this.setSetting(constant.SETTINGS_KEY.FIGHT_TIMES, 0);\n        } \n\n        return fightTimes;\n    }\n\n    /**\n     * 获取未解锁的玩家技能\n     *\n     * @memberof playerData\n     */\n    public getLockPlyerSkill (): [] {\n        let arrSkill = localConfig.instance.getTableArr(\"playerSkill\");\n        let arrLock: any = [];\n\n        arrLock = arrSkill.filter((item: any)=>{\n            return !this.playerInfo.arrSkill.includes(item.ID) && (item.ID !== constant.PLAYER_SKILL.RECOVERY);\n        })\n\n        return arrLock;\n    }\n\n    /**\n     * 添加玩家某项技能\n     *\n     * @param {*} info\n     * @memberof playerData\n     */\n    public addPlayerSkill (info: any) {\n        if (!this.playerInfo.arrSkill.includes(info.ID)) {\n            this.playerInfo.arrSkill.push(info.ID);\n            this.savePlayerInfoToLocalCache();\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.PARSE_PLAYER_SKILL);\n        }\n    }\n\n    /**\n     * 删除玩家某项技能\n     *\n     * @param {*} info\n     * @memberof playerData\n     */\n    public reducePlayerSkill (info: any) {\n        if (this.playerInfo.arrSkill.includes(info.ID)) {\n            let idx = this.playerInfo.arrSkill.findIndex((item: number)=>{ return item === info.ID});\n            this.playerInfo.arrSkill.splice(idx, 1);\n\n            // this.reduceValueChangeSkill(info.ID);\n\n            this.savePlayerInfoToLocalCache();\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.PARSE_PLAYER_SKILL);\n        }\n    }\n}\n"]}