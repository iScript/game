{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/player.ts"],"names":["_decorator","Component","Quat","Vec3","macro","RigidBodyComponent","CapsuleColliderComponent","geometry","MapManager","util","AudioManager","EffectManager","playerData","localConfig","PlayerModel","poolManager","clientEvent","constant","GameManager","resourceUtil","Arrow","uiManager","CharacterRigid","qt_0","v3_0","v3_1","v3_2","ray","Ray","ccclass","property","Player","isDie","v","_isDie","_showDie","curMoveSpeed","_curMoveSpeed","scriptCharacterRigid","initSpeed","onEnable","on","EVENT_TYPE","PARSE_PLAYER_SKILL","_parsePlayerSkill","ON_REVIVE","_onRevive","onDisable","off","scriptBloodBar","node","destroy","start","init","isMoving","isPlayRotate","isArrowDouble","isArrowPenetrate","isArrowContinuous","isArrowIce","isArrowFire","isBloodthirsty","isArrowLightning","isArrowLaunch","_horizontal","_vertical","_ndTarget","getComponent","playerBaseInfo","instance","queryByID","BASE","PLAYER_01","arrScale","parseStringData","scale","_oriPlayerScale","set","setScale","resetPlayerWorPos","arrAngle","angle","_oriPlayerAngle","eulerAngles","curAttackPower","attackPower","curDefensePower","defensePower","curAttackSpeed","attackSpeed","moveSpeed","curDodgeRate","dodgeRate","curCriticalHitRate","criticalHitRate","curCriticalHitDamage","criticalHitDamage","curHpLimit","hp","_hp","showPlayerBloodBar","_bloodTipOffsetPos","scriptPlayerModel","playAni","PLAYER_ANI_TYPE","IDLE","rigidComPlayer","clearState","resetPlayerState","_originAngle","children","forEach","ndChild","name","active","arrPosition","position","isMapAnS","_oriPlayerPos","setPosition","isCoverSkill","arrSkill","playerInfo","arrFormChangeSkill","arrValueChangeSkill","arrBuffSkill","arrTriggerSkill","length","item","startsWith","PLAYER_SKILL_USE","FORM_CHANGE","push","VALUE","BUFF","TRIGGER","_arrFormChangeSkill","_arrValueChangeSkill","_arrBuffSkill","_arrTriggerSkill","indexOf","PLAYER_SKILL","ARROW_DOUBLE","ARROW_PENETRATE","ARROW_CONTINUOUS","oriAttackPower","raiseAttackPowerRate_1","getValueSkillRate","RAISE_ATTACK_01","raiseAttackPowerRate_2","RAISE_ATTACK_02","oriDodgeRate","raiseDodgeRate","RAISE_DODGE","oriAttackSpeed","raiseAttackSpeedRate_1","RAISE_ATTACK_SPEED_01","raiseAttackSpeedRate_2","RAISE_ATTACK_SPEED_02","oriHpLimit","raiseHpLimitRate","RAISE_HP_LIMIT","offsetHp","addBlood","oriMoveSpeed","raiseMoveSpeedRate","MOVE_SPEED","oriCriticalHitRate","oriCriticalHitDamage","arrCritical_1","arrCritical_2","getValueSkillRateArr","RAISE_CRITICAL_HIT_DAMAGE_01","RAISE_CRITICAL_HIT_DAMAGE_02","raiseCriticalHitRate","raiseCriticalHitDamage","ARROW_ICE","ARROW_FIRE","ARROW_LIGHTNING","ARROW_LAUNCH","BLOODTHIRSTY","key","rate","skillInfo","Number","value","arrRate","split","map","playAction","obj","action","PLAYER_ACTION","MOVE","radian","RAD","Math","round","cos","sin","_curAngleY","STOP_MOVE","_onPlayerStopMove","stopMove","isGameOver","isGameStart","arrMonster","ndBoss","_attackMonster","getNearestMonster","screenPos1","mainCamera","worldToScreen","worldPosition","screenPos2","subtract","_playerMonsterOffset","angleY","atan2","y","x","PI","ATTACK","isRunning","throwArrowToEnemy","forward","_forWard","normalize","negative","_initArrow","String","ARROW_REVERSE","ARROW_SIDE","ARROW_UMBRELLA","resName","arrowName","loadModelRes","then","prefab","ndArrow","getNode","ndGameManager","playerWorPos","_arrowPos","z","setWorldPosition","ndArrowItem","scriptArrowItem","_throwArrowSpeed","bloodNum","isIncreaseLimit","playEffect","showBloodTips","FIGHT_TIP","ADD_BLOOD","refreshBlood","playSound","SOUND","RECOVERY","reduceBlood","baseInfo","HIT_PLAYER","random","tipType","REDUCE_BLOOD","damage","attackAddition","isCriticalHit","CRITICAL_HIT","playRunSmoke","_ndRunSmokeEffect","loadEffectRes","pf","playTrail","hideRunSmoke","preloadArrow","callback","loadNum","loadArrow","PLAYER_01_DIE","DIE","isWin","isGamePause","REVIVE","dispatchEvent","MONSTER_MOVE","update","deltaTime","_tempAngle","_curAngle","_range","isEqual","equals","_targetAngle","lerp","_rotateDirection","fromViewUp","toEuler","_curAngle_2","abs","move","RUN","isIdle","isAttacking"],"mappings":"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","sourcesContent":["import { MapManager } from './mapManager';\nimport { util } from './../framework/util';\nimport { AudioManager } from './../framework/audioManager';\nimport { EffectManager } from './../framework/effectManager';\nimport { playerData } from './../framework/playerData';\nimport { localConfig } from './../framework/localConfig';\nimport { PlayerModel } from './playerModel';\nimport { poolManager } from './../framework/poolManager';\nimport { clientEvent } from './../framework/clientEvent';\nimport { _decorator, Component, Quat, Vec3, Node, macro, ProgressBar, clamp, RigidBodyComponent, ICollisionEvent, CapsuleColliderComponent, geometry, PhysicsSystem, BoxColliderComponent, MeshRenderer } from 'cc';\nimport { constant } from '../framework/constant';\nimport { GameManager } from './gameManager';\nimport { resourceUtil } from '../framework/resourceUtil';\nimport { Arrow } from './arrow';\nimport { uiManager } from '../framework/uiManager';\nimport { PlayerBloodBar } from '../ui/fight/playerBloodBar';\nimport { CharacterRigid } from './characterRigid';\n\nlet qt_0 = new Quat();\nlet v3_0 = new Vec3();\nlet v3_1 = new Vec3();\nlet v3_2 = new Vec3();\nconst ray: geometry.Ray = new geometry.Ray();\n\nconst { ccclass, property } = _decorator;\n@ccclass('Player')\nexport class Player extends Component {\n    @property(PlayerModel)\n    public scriptPlayerModel: PlayerModel = null!;//玩家动画组件播放脚本\n\n    @property(RigidBodyComponent)\n    public rigidComPlayer: RigidBodyComponent = null!;\n\n    @property(CapsuleColliderComponent)\n    public colliderComPlayer: CapsuleColliderComponent = null!;\n    \n    public scriptBloodBar: PlayerBloodBar = null!;//血条绑定脚本\n    public isMoving: boolean = false;//玩家是否正在移动\n    public isPlayRotate: boolean = false;//是否旋转\n    public scriptCharacterRigid: CharacterRigid = null!;\n    public playerBaseInfo: any = {};//玩家在base.csv的基础数据\n\n    public set isDie (v: boolean) {\n        this._isDie = v;\n\n        if (this._isDie) {\n            this._showDie();\n        }\n    }\n\n    public get isDie () {\n        return this._isDie;\n    }\n\n    //是否拥有形态技能\n    public isArrowDouble: boolean = false;//是否拥有技能：弓箭双重射击\n    public isArrowPenetrate: boolean = false;//是否拥有技能：弓箭穿透射击\n    // public isArrowRebound: boolean = false;//是否拥有技能：弓箭反弹\n    public isArrowContinuous: boolean = false;//是否拥有技能：连续射击\n\n    //是否拥有buff技能\n    public isArrowIce: boolean = false;//是否拥有技能：冰冻\n    public isArrowFire: boolean = false;//是否拥有技能：灼烧\n\n    //是否拥有触发技能\n    public isBloodthirsty: boolean = false;//是否拥有技能：嗜血\n    public isArrowLightning: boolean = false;//是否拥有技能： 闪电\n    public isArrowLaunch: boolean = false;//是否拥有技能：弹射\n\n    //当前\"数值技能\"值\n    public curAttackPower: number = 20;//当前攻击力\n    public curDefensePower: number = 1;//当前防御力\n    public curAttackSpeed: number = 1;//当前攻击速度\n    public curDodgeRate: number = 0;//当前闪避率\n    public curCriticalHitRate: number = 0;//当前暴击率，0为不暴击\n    public curCriticalHitDamage: number = 0;//当前暴击伤害\n    public curHpLimit: number = 0;//当前玩家生命值上限（这个是上限，是生命上限，不是当前生命值）\n    public set curMoveSpeed (v: number) {\n        this._curMoveSpeed = v;\n        this.scriptCharacterRigid.initSpeed(v);\n    }\n\n    public get curMoveSpeed () {\n        return this._curMoveSpeed;\n    }\n\n    //技能数组\n    private _arrFormChangeSkill: string[] = [];//玩家当前拥有的形态变化技能10x\n    private _arrValueChangeSkill: string[] = [];//玩家数值变化技能20x\n    private _arrBuffSkill: string[] = [];//玩家buff技能30x\n    private _arrTriggerSkill: string[] = [];//玩家触发技能40x\n\n    private _hp: number = 0;//玩家当前生命值\n    private _isDie: boolean = false;//主角是否阵亡\n    private _horizontal: number = 0;//水平移动距离\n    private _vertical: number = 0;//垂直移动距离\n    private _targetAngle: Vec3 = new Vec3();//目标旋转角度\n    private _curAngleY: number = 0;//当前Y分量旋转角度\n    private _ndTarget: Node = null!;//目标小怪\n    private _throwArrowSpeed: number = 30;//弓箭速30\n    private _arrowPos: Vec3 = new Vec3();//箭初始化位置\n    private _bloodTipOffsetPos: Vec3 = new Vec3(-10, 150, 0);//血量提示和玩家间距\n    private _playerMonsterOffset: Vec3 = new Vec3();//小怪和玩家间距\n    private _isUseFullAngle: boolean = true;//是否使用360度旋转，否则使用8方向旋转\n    private _oriPlayerPos: Vec3 = new Vec3(0, 1.7, 0);//玩家初始世界坐标\n    private _oriPlayerScale: Vec3 = new Vec3(4, 4, 4);//玩家初始缩放倍数\n    private _oriPlayerAngle: Vec3 = new Vec3(0, -90, 0);//玩家初始角度\n    private _curAngle: Vec3 = new Vec3()//当前玩家旋转的角度\n    private _curAngle_2: Vec3 = new Vec3();//玩家角度\n    private _rotateDirection: Vec3 = new Vec3();//旋转方向\n    private _curWorPos: Vec3 = new Vec3();//玩家当前世界坐标\n    private _ndRunSmokeEffect: Node = null!;//烟雾特效\n    private _originAngle: Vec3 = new Vec3(0, -90, 0);//玩家开始角度\n    private _tempAngle: Vec3 = new Vec3();//临时变量，玩家角度\n    private _forWard: Vec3 = new Vec3();//朝向\n    private _range: number = 0.01;//\n    private _curMoveSpeed: number = 0;//当前玩家移动速度\n\n    onEnable () {\n        clientEvent.on(constant.EVENT_TYPE.PARSE_PLAYER_SKILL, this._parsePlayerSkill, this);\n        clientEvent.on(constant.EVENT_TYPE.ON_REVIVE, this._onRevive, this);\n    }\n\n    onDisable () {\n        clientEvent.off(constant.EVENT_TYPE.PARSE_PLAYER_SKILL, this._parsePlayerSkill, this);\n        clientEvent.off(constant.EVENT_TYPE.ON_REVIVE, this._onRevive, this);\n\n        if (this.scriptBloodBar) {\n            this.scriptBloodBar.node.destroy();\n            this.scriptBloodBar = null!;\n        }\n    }\n\n    start () {\n\n    }\n\n    public init() {\n        this.isMoving = false;\n        this.isDie = false;\n        this.isPlayRotate = false;\n\n        this.isArrowDouble = false;\n        this.isArrowPenetrate = false;\n        // this.isArrowRebound = false;\n        this.isArrowContinuous = false;\n        this.isArrowIce = false;\n        this.isArrowFire = false;\n        this.isBloodthirsty = false;\n        this.isArrowLightning = false;\n        this.isArrowLaunch = false;\n\n        this._horizontal = 0;\n        this._vertical = 0;\n\n        this._ndTarget = null!;\n\n        this.scriptCharacterRigid = this.node.getComponent(CharacterRigid) as CharacterRigid;\n\n        //获取玩家基础数据\n        this.playerBaseInfo = localConfig.instance.queryByID(\"base\", constant.BASE.PLAYER_01);\n        \n        if (this.playerBaseInfo) {\n            //设置玩家大小\n            let arrScale = util.parseStringData(this.playerBaseInfo.scale, \",\");\n            this._oriPlayerScale.set(arrScale[0], arrScale[1], arrScale[2]);\n            this.node.setScale(this._oriPlayerScale);\n\n            this.resetPlayerWorPos();\n\n            //设置角度\n            let arrAngle = util.parseStringData(this.playerBaseInfo.angle, \",\");\n            this._oriPlayerAngle.set(arrAngle[0], arrAngle[1], arrAngle[2]);\n            this.node.eulerAngles = this._oriPlayerAngle;\n\n            this.curAttackPower = this.playerBaseInfo.attackPower;\n            this.curDefensePower = this.playerBaseInfo.defensePower;\n            this.curAttackSpeed = this.playerBaseInfo.attackSpeed;\n            this.curMoveSpeed = this.playerBaseInfo.moveSpeed;\n            this.curDodgeRate = this.playerBaseInfo.dodgeRate;\n            this.curCriticalHitRate = this.playerBaseInfo.criticalHitRate;\n            this.curCriticalHitDamage = this.playerBaseInfo.criticalHitDamage;\n            this.curHpLimit = this.playerBaseInfo.hp;\n\n            this._hp = this.playerBaseInfo.hp;\n        }\n\n        this._parsePlayerSkill(true);\n\n        //展示血条\n        uiManager.instance.showPlayerBloodBar(this, this._hp, ()=>{\n        }, this._bloodTipOffsetPos);\n\n        this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.IDLE, true);\n\n        this.scriptPlayerModel.init();\n\n        this.rigidComPlayer.clearState();\n    }\n\n    /**\n     * 每次成功进入新的一层则更新玩家状态\n     *\n     * @memberof Player\n     */\n    public resetPlayerState () {\n        this.rigidComPlayer.clearState();\n        this.resetPlayerWorPos();\n        this.node.eulerAngles = this._originAngle;\n        this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.IDLE, true);\n        //将未播放结束的特效节点隐藏，避免到下一层还在展示特效\n        this.node.children.forEach((ndChild: Node)=>{\n            if (ndChild.name !== \"body\") {\n                ndChild.active = false;\n            }\n        })\n    }\n\n    /**\n     * 根据an、anS两张图设置不同的玩家初始位置\n     */\n    private resetPlayerWorPos () {\n        let arrPosition = util.parseStringData(this.playerBaseInfo.position, \",\");\n\n        if (MapManager.isMapAnS) {\n            this._oriPlayerPos.set(-16.742, arrPosition[1], -0.719);\n        } else {\n            //设置坐标\n            this._oriPlayerPos.set(arrPosition[0], arrPosition[1], arrPosition[2]);            \n        }\n\n        this.node.setPosition(this._oriPlayerPos);\n    }\n\n    /**\n     * 解析玩家当前技能\n     * \n     * @param {boolean} isCoverSkill 是否重新覆盖技能，主角初始化的要，其他时候不需要\n     * @memberof Player\n     */\n    private _parsePlayerSkill (isCoverSkill: boolean = false) {\n        let arrSkill = playerData.instance.playerInfo.arrSkill;\n\n        let arrFormChangeSkill: string[] = [];\n        let arrValueChangeSkill: string[] = [];\n        let arrBuffSkill: string[] = [];\n        let arrTriggerSkill: string[] = [];\n\n        if (arrSkill.length) {\n            arrSkill.forEach((item: string) => {\n                if (item.startsWith(constant.PLAYER_SKILL_USE.FORM_CHANGE)) {\n                    arrFormChangeSkill.push(item);\n                } else if (item.startsWith(constant.PLAYER_SKILL_USE.VALUE)) {\n                    arrValueChangeSkill.push(item);\n                } else if (item.startsWith(constant.PLAYER_SKILL_USE.BUFF)) {\n                    arrBuffSkill.push(item);\n                } else if (item.startsWith(constant.PLAYER_SKILL_USE.TRIGGER)) {\n                    arrTriggerSkill.push(item);\n                }\n            });\n        }\n\n        this._arrFormChangeSkill = arrFormChangeSkill;\n        this._arrValueChangeSkill = arrValueChangeSkill;\n        this._arrBuffSkill = arrBuffSkill;\n        this._arrTriggerSkill = arrTriggerSkill;\n\n        // console.log(\"###_arrFormChangeSkill\", this._arrFormChangeSkill);\n        // console.log(\"###_arrValueChangeSkill\", this._arrValueChangeSkill);\n        // console.log(\"###_arrBuffSkill\", this._arrBuffSkill);\n        // console.log(\"###_arrTriggerSkill\", this._arrTriggerSkill);\n\n        if (this._arrFormChangeSkill.length) {\n            this.isArrowDouble = this._arrFormChangeSkill.indexOf(constant.PLAYER_SKILL.ARROW_DOUBLE) !== -1;\n            this.isArrowPenetrate = this._arrFormChangeSkill.indexOf(constant.PLAYER_SKILL.ARROW_PENETRATE) !== -1;\n            // this.isArrowRebound = this._arrFormChangeSkill.indexOf(constant.PLAYER_SKILL.ARROW_REBOUND) !== -1;\n            this.isArrowContinuous = this._arrFormChangeSkill.indexOf(constant.PLAYER_SKILL.ARROW_CONTINUOUS) !== -1;\n        } else {\n            this.isArrowDouble = false;\n            this.isArrowPenetrate = false;\n            // this.isArrowRebound = false;\n            this.isArrowContinuous = false;\n        }\n\n        //数值技能只使用一次, 注意：每次获得到需用乘法都是用当前值去乘，而不是乘以最开始的值\n        if (this._arrValueChangeSkill.length) {\n            //攻击力提升百分比\n            let oriAttackPower = this.playerBaseInfo.attackPower;\n            let curAttackPower = oriAttackPower;\n            //攻击力1\n            let raiseAttackPowerRate_1 = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_ATTACK_01);\n            curAttackPower = oriAttackPower * (1 + raiseAttackPowerRate_1);\n            //攻击力2\n            let raiseAttackPowerRate_2 = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_ATTACK_02);\n            this.curAttackPower = curAttackPower * (1 + raiseAttackPowerRate_2);\n            \n            //闪避率提升百分比\n            let oriDodgeRate = this.playerBaseInfo.dodgeRate;\n            let raiseDodgeRate = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_DODGE);\n            this.curDodgeRate = oriDodgeRate + raiseDodgeRate;//注：以加法形式增加\n\n            //攻速提升百分比\n            let oriAttackSpeed = this.playerBaseInfo.attackSpeed;\n            let curAttackSpeed = oriAttackSpeed;\n            //攻速1\n            let raiseAttackSpeedRate_1 = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_ATTACK_SPEED_01);\n            curAttackSpeed = oriAttackSpeed * (1 + raiseAttackSpeedRate_1);\n            //攻速2\n            let raiseAttackSpeedRate_2 = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_ATTACK_SPEED_02);\n            this.curAttackSpeed = curAttackSpeed * (1 + raiseAttackSpeedRate_2);\n\n            if (!isCoverSkill) {\n                let oriHpLimit = this.playerBaseInfo.hp;\n                let raiseHpLimitRate = this.getValueSkillRate(constant.PLAYER_SKILL.RAISE_HP_LIMIT);\n                let offsetHp = oriHpLimit * raiseHpLimitRate;\n                let curHpLimit = oriHpLimit + offsetHp;\n\n                if (curHpLimit > this.curHpLimit) {\n                    this.addBlood(offsetHp, true);\n                    this.curHpLimit = curHpLimit;\n                    this._hp += offsetHp;\n                }\n            }\n\n            //移速提升百分比\n            let oriMoveSpeed = this.playerBaseInfo.moveSpeed;\n            let raiseMoveSpeedRate = this.getValueSkillRate(constant.PLAYER_SKILL.MOVE_SPEED);\n            this.curMoveSpeed = oriMoveSpeed * (1 + raiseMoveSpeedRate);\n\n            //暴击+爆伤提升百分比\n            let oriCriticalHitRate = this.playerBaseInfo.criticalHitRate;\n            let oriCriticalHitDamage = this.playerBaseInfo.criticalHitDamage;\n            let arrCritical_1: any = [0, 0];//暴击率,暴击伤害比\n            let arrCritical_2: any = [0, 0];//暴击率,暴击伤害比\n            arrCritical_1 = this.getValueSkillRateArr(constant.PLAYER_SKILL.RAISE_CRITICAL_HIT_DAMAGE_01);\n            arrCritical_2 = this.getValueSkillRateArr(constant.PLAYER_SKILL.RAISE_CRITICAL_HIT_DAMAGE_02);\n\n            let raiseCriticalHitRate = arrCritical_1[0] + arrCritical_2[0];\n            let raiseCriticalHitDamage = arrCritical_1[1] + arrCritical_2[1];\n\n            if (raiseCriticalHitRate) {\n                this.curCriticalHitRate = oriCriticalHitRate + raiseCriticalHitRate;//注：以加法形式增加\n            }\n            \n            if (raiseCriticalHitDamage) {\n                this.curCriticalHitDamage = oriCriticalHitDamage + raiseCriticalHitDamage;//注：以加法形式增加\n            }\n        } else {\n            this.curAttackPower = this.playerBaseInfo.attackPower;\n            this.curAttackSpeed = this.playerBaseInfo.attackSpeed;\n            this.curMoveSpeed = this.playerBaseInfo.moveSpeed;\n            this.curDodgeRate = this.playerBaseInfo.dodgeRate;\n            this.curCriticalHitRate = this.playerBaseInfo.criticalHitRate;\n            this.curCriticalHitDamage = this.playerBaseInfo.criticalHitDamage;\n            this.curHpLimit = this.playerBaseInfo.hp;\n        }\n\n        if (this._arrBuffSkill.length) {\n            this.isArrowIce = this._arrBuffSkill.indexOf(constant.PLAYER_SKILL.ARROW_ICE) !== -1;\n            this.isArrowFire = this._arrBuffSkill.indexOf(constant.PLAYER_SKILL.ARROW_FIRE) !== -1;\n        } else {\n            this.isArrowIce = false;\n            this.isArrowFire = false;\n        }\n\n        if (this._arrTriggerSkill.length) {\n            this.isArrowLightning = this._arrTriggerSkill.indexOf(constant.PLAYER_SKILL.ARROW_LIGHTNING) !== -1;\n            this.isArrowLaunch = this._arrTriggerSkill.indexOf(constant.PLAYER_SKILL.ARROW_LAUNCH) !== -1;\n            this.isBloodthirsty = this._arrTriggerSkill.indexOf(constant.PLAYER_SKILL.BLOODTHIRSTY) !== -1;\n        } else {\n            this.isArrowLightning = false;  \n            this.isArrowLaunch = false;\n            this.isBloodthirsty = false;\n        }\n    }\n\n    /**\n     * 返回当前数值技能提升比例\n     */\n    private getValueSkillRate (key: string) {\n        let rate = 0;//百分比\n\n        if (this._arrValueChangeSkill.indexOf(key) !== -1) {\n            let skillInfo = localConfig.instance.queryByID(\"playerSkill\", key);\n            rate = Number(skillInfo.value);\n        }\n\n        return rate ?? 0;\n    }\n\n    /**\n     * 返回当前数值技能提升比例数组\n     */\n     private getValueSkillRateArr (key: string) {\n        let arrRate: any[] = [];\n\n        if (this._arrValueChangeSkill.indexOf(key) !== -1) {\n            let skillInfo = localConfig.instance.queryByID(\"playerSkill\", key);\n            arrRate = skillInfo.value.split(\"#\");\n        }\n\n        arrRate = arrRate.map((item: number)=>{\n            return item ? Number(item) : 0;\n        })\n\n        if (arrRate.length === 0) {\n            arrRate = [0, 0];\n        }\n\n        return arrRate;\n    }\n\n    /**\n     * 玩家行为\n     *\n     * @param {*} obj\n     * @memberof Player\n     */\n    public playAction (obj: any) {\n        if (this.isDie) {\n            return;\n        }\n\n        switch (obj.action) {\n            case constant.PLAYER_ACTION.MOVE:\n                let angle = obj.value + 135;\n\n                let radian = angle * macro.RAD;\n                this._horizontal = Math.round(Math.cos(radian) * 1);\n                this._vertical = Math.round(Math.sin(radian) * 1);  \n                this.isMoving = true;\n                this._curAngleY = obj.value;\n                this._curAngleY = this._curAngleY < 0 ? this._curAngleY + 360 : this._curAngleY > 360 ? this._curAngleY - 360 : this._curAngleY;\n                break;\n            case constant.PLAYER_ACTION.STOP_MOVE:\n                this._horizontal = 0;\n                this._vertical = 0;\n                this._onPlayerStopMove();\n                this.isMoving = false;\n                this.rigidComPlayer.clearState();\n                this.scriptCharacterRigid.stopMove();\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 玩家不移动时：a) 地图上没有怪物：在原地待机。b) 地图上有怪物：向怪物方向攻击。\n     *\n     * @private\n     * @memberof Player\n     */\n    private _onPlayerStopMove () {\n        if (!GameManager.isGameOver && GameManager.isGameStart) {\n            if (GameManager.arrMonster.length || GameManager.ndBoss) {\n                this._attackMonster();\n            } else {\n                this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.IDLE, true);\n            }\n        }\n    }\n\n    /**\n     * 向怪物方向攻击\n     */\n    private _attackMonster () {\n        this._ndTarget = GameManager.getNearestMonster()!;\n\n        if (!this._ndTarget || this.isDie) {\n            return;\n        }\n\n        //先转向目标小怪\n        let screenPos1 = GameManager.mainCamera?.worldToScreen(this._ndTarget.worldPosition) as Vec3;\n        let screenPos2 = GameManager.mainCamera?.worldToScreen(this.node.worldPosition) as Vec3;\n        Vec3.subtract(this._playerMonsterOffset, screenPos1, screenPos2);\n        let angleY = Math.round(Math.atan2(this._playerMonsterOffset.y, this._playerMonsterOffset.x) * 180 / Math.PI);\n        // if (angleY !== this._curAngleY) {\n            this.playAction({action: constant.PLAYER_ACTION.MOVE, value: angleY});\n        // }\n        \n        this.isMoving = false;\n\n        //再播放攻击动画\n        this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.ATTACK, false, ()=>{\n            if (!this.scriptPlayerModel.isRunning) {\n                this._attackMonster();                \n            }\n        });\n    }\n\n    /**\n     * 向敌人射箭\n     *\n     * @returns\n     * @memberof Player\n     */\n    public throwArrowToEnemy () {\n        //todo：射击摇摆\n        this.node.forward = Vec3.subtract(this._forWard, this.node.worldPosition, this._ndTarget.worldPosition).normalize().negative();\n\n        //使用形态变换技能\n        if (this._arrFormChangeSkill.length) {\n            //使用技能\n            if (this.isArrowDouble) {\n                if (this.isArrowContinuous) {\n                    this._initArrow(\"arrowDoubleContinuous\");\n                } else {\n                    this._initArrow(\"arrowDouble\");\n                }\n            } else {\n                if (this.isArrowContinuous) {\n                    this._initArrow(\"arrowSingleContinuous\");\n                } else {\n                    this._initArrow(\"arrowSingle\");\n                }\n            } \n            \n            this._arrFormChangeSkill.forEach((item: string)=>{\n                let skillInfo = localConfig.instance.queryByID(\"playerSkill\", String(item));\n\n                if (item === constant.PLAYER_SKILL.ARROW_REVERSE || item === constant.PLAYER_SKILL.ARROW_SIDE || item === constant.PLAYER_SKILL.ARROW_UMBRELLA) {\n                    this._initArrow(skillInfo.resName);\n                }\n            })\n        } else {\n            //没有技能则默认连续射单只箭\n            this._initArrow(\"arrowSingle\");\n        }\n    }\n\n    /**\n     * 初始化箭\n     *\n     * @private\n     * @param {string} arrowName\n     * @memberof Player\n     */\n    private _initArrow (arrowName: string) {\n        resourceUtil.loadModelRes(`weapon/arrow/${arrowName}`).then((prefab: any)=>{\n            if (this.isMoving) {\n                return;\n            }\n            let ndArrow = poolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n            let playerWorPos = this.node.worldPosition;\n            this._arrowPos.set(playerWorPos.x, 3, playerWorPos.z);\n\n            // if (GameManager.isTesting) {\n            //     this._arrowPos.set(playerWorPos.x, -3, playerWorPos.z);\n            // }\n            \n            ndArrow.setWorldPosition(this._arrowPos);\n            // ndArrow.eulerAngles = Vec3.ZERO;\n            // ndArrow.eulerAngles = ndArrow.eulerAngles.add(this.node.eulerAngles);\n            ndArrow.eulerAngles = this.node.eulerAngles;\n            \n            ndArrow.children.forEach((ndArrowItem: Node)=>{\n                let scriptArrowItem = ndArrowItem.getComponent(Arrow) as Arrow;\n                \n                scriptArrowItem.init(this._throwArrowSpeed, this.node.worldPosition);\n            })\n        })\n    }\n\n    /**\n     * 玩家加血、增加血量上限\n     *\n     * @param {number} bloodNum\n     * @param {boolean} [isIncreaseLimit]\n     * @memberof Player\n     */\n    public addBlood (bloodNum: number, isIncreaseLimit?: boolean) {\n        EffectManager.instance.playEffect(this.node,\"recovery/recovery\", false, true);\n        uiManager.instance.showBloodTips(this, constant.FIGHT_TIP.ADD_BLOOD, bloodNum, this._bloodTipOffsetPos);\n        this.scriptBloodBar.refreshBlood(bloodNum, isIncreaseLimit);\n\n        AudioManager.instance.playSound(constant.SOUND.RECOVERY);\n    }\n\n    /**\n     * 玩家扣血\n     *\n     * @param {*} baseInfo 敌人基础信息\n     * @return {*} \n     * @memberof Player\n     */\n    public reduceBlood (baseInfo: any) {\n        if (this.isDie) {\n            return;\n        }\n\n        AudioManager.instance.playSound(constant.SOUND.HIT_PLAYER);  \n        \n        if (Math.random() > this.playerBaseInfo.dodgeRate) {\n            //扣血\n            let tipType = constant.FIGHT_TIP.REDUCE_BLOOD;\n            //敌人扣到\n            let damage = baseInfo.attackPower * GameManager.attackAddition * (1 - this.playerBaseInfo.defensePower / (this.playerBaseInfo.defensePower + 400));\n            let isCriticalHit = Math.random() <= baseInfo.criticalHitRate;//是否暴击\n            if (isCriticalHit) {\n                damage = damage * baseInfo.criticalHitDamage;\n                tipType = constant.FIGHT_TIP.CRITICAL_HIT;\n            }\n\n            uiManager.instance.showBloodTips(this, tipType, -damage, this._bloodTipOffsetPos);\n            this.scriptBloodBar.refreshBlood(-damage);\n        }\n    }\n\n    /**\n     * 奔跑的时候加个烟雾\n     *\n     * @memberof Player\n     */\n    public playRunSmoke () {\n        // console.log(\"展示烟雾\");\n\n        if (!this._ndRunSmokeEffect) {\n            resourceUtil.loadEffectRes(\"runSmoke/runSmoke\").then((pf: any)=>{\n                this._ndRunSmokeEffect = poolManager.instance.getNode(pf, this.node);\n                this._ndRunSmokeEffect.active = true;    \n                EffectManager.instance.playTrail(this._ndRunSmokeEffect);\n            });\n        } else {\n            this._ndRunSmokeEffect.active = true;\n            EffectManager.instance.playTrail(this._ndRunSmokeEffect);\n        }\n    }\n\n    /**\n     * 攻击的时候隐藏烟雾\n     *\n     * @memberof Player\n     */\n    public hideRunSmoke () {\n        if (this._ndRunSmokeEffect && this._ndRunSmokeEffect.active) {\n            this._ndRunSmokeEffect.active = false;\n            // console.log(\"隐藏烟雾\");\n        }\n    }\n\n    /**\n     * 预加载箭\n     *\n     * @private\n     * @memberof GameManager\n     */\n    public preloadArrow (callback: Function) {\n        let loadNum = 1;\n        let loadArrow = (arrowName: string) => {\n            resourceUtil.loadModelRes(`weapon/arrow/${arrowName}`).then((prefab: any)=>{\n                let ndArrow = poolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n                ndArrow.setWorldPosition(new Vec3(0, 30, 0));\n\n                ndArrow.children.forEach((ndArrowItem: Node)=>{\n                    let scriptArrowItem = ndArrowItem.getComponent(Arrow) as Arrow;\n                    scriptArrowItem.init(this._throwArrowSpeed, this.node.worldPosition);\n                })\n\n                loadNum -= 1;\n                if (loadNum === 0) {\n                    callback();\n                }\n            })\n        }\n\n        //没有技能,默认单只箭\n        if (this._arrFormChangeSkill.length) {\n            //使用技能\n            if (this.isArrowDouble) {\n                if (this.isArrowContinuous) {\n                    loadArrow(\"arrowDoubleContinuous\");\n                } else {\n                    loadArrow(\"arrowDouble\");\n                }\n            } else {\n                if (this.isArrowContinuous) {\n                    loadArrow(\"arrowSingleContinuous\");\n                } else {\n                    loadArrow(\"arrowSingle\");\n                }\n            } \n            \n            this._arrFormChangeSkill.forEach((item: string)=>{\n                let skillInfo = localConfig.instance.queryByID(\"playerSkill\", String(item));\n                if (item === constant.PLAYER_SKILL.ARROW_REVERSE || item === constant.PLAYER_SKILL.ARROW_SIDE || item === constant.PLAYER_SKILL.ARROW_UMBRELLA) {\n                    loadNum += 1;\n                    loadArrow(skillInfo.resName);\n                }\n            })\n        } else {\n            //默认连续射单只箭\n            loadArrow(\"arrowSingle\");\n        }\n    }\n\n    private _showDie () {\n        this.scriptCharacterRigid.stopMove();\n        AudioManager.instance.playSound(constant.SOUND.PLAYER_01_DIE);\n\n        this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.DIE, false, ()=>{\n            GameManager.isWin = false;\n        });\n    }\n\n    /**\n     * 玩家复活\n     */\n     private _onRevive () {\n        GameManager.isGamePause = false;\n        this.addBlood(this.curHpLimit * 0.5);\n        this.scriptBloodBar.node.active = true;\n\n        this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.REVIVE, false, ()=>{\n            this.isDie = false;\n            this.playAction({action: constant.PLAYER_ACTION.STOP_MOVE});\n            clientEvent.dispatchEvent(constant.EVENT_TYPE.MONSTER_MOVE);\n        });\n\n        AudioManager.instance.playSound(constant.SOUND.REVIVE);  \n    }\n\n    update (deltaTime: number) {\n        if (!GameManager.isGameStart || GameManager.isGameOver || GameManager.isGamePause || this.isDie) {\n            return;\n        }\n\n        //玩家旋转\n        if (this.isPlayRotate) {\n            //当前玩家角度\n            this._tempAngle.set(this.node.eulerAngles);\n            this._tempAngle.y = this._tempAngle.y < 0 ? this._tempAngle.y + 360 : this._tempAngle.y;\n\n            this.node.eulerAngles = this._tempAngle;\n\n            this._curAngle.set(0, this._tempAngle.y, 0);\n\n            if (this._horizontal === 0 && this._vertical === 0) {\n                this._range = 0.1;\n            } else {\n                this._range = 0.01;\n            }\n\n            //第二个参数越小朝向敌人越精确\n            let isEqual = this._curAngle.equals(this._targetAngle, this._range);\n\n            if (!isEqual) {\n                Vec3.lerp(this._curAngle, this._curAngle, this._targetAngle, 0.167);\n                this.node.eulerAngles = this._curAngle;\n            } else {\n                this.isPlayRotate = false;\n                this.node.eulerAngles = this._targetAngle;\n            }\n        }\n\n        if (this._horizontal !== 0 || this._vertical !== 0) {\n            //计算出旋转角度\n            this._rotateDirection.set(this._horizontal, 0, -this._vertical);\n            this._rotateDirection.normalize();\n            Quat.fromViewUp(qt_0, this._rotateDirection);\n            Quat.toEuler(v3_0, qt_0);\n            v3_0.y = v3_0.y < 0 ? v3_0.y + 360 : v3_0.y;\n\n            // console.log(\"v3_0\", v3_0.y);\n\n            this.isPlayRotate = true;\n            \n            //设置当前玩家角度为正数\n            this._curAngle_2.set(this.node.eulerAngles);\n            if (this._curAngle_2.y < 0) {\n                this._curAngle_2.y += 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            } else if (this._curAngle_2.y > 360) {\n                this._curAngle_2.y -= 360;\n                this.node.eulerAngles = this._curAngle_2; // 转为0~360\n            }\n\n            //设置目标旋转角度\n            if (!v3_0.equals(this.node.eulerAngles, 0.01)) {\n                    this._targetAngle.y = this._curAngleY + 225; \n                    this._targetAngle.y = this._targetAngle.y < 0 ? this._targetAngle.y + 360 : this._targetAngle.y > 360 ? this._targetAngle.y - 360 : this._targetAngle.y;\n                    this._targetAngle.set(0, this._targetAngle.y, 0);\n\n                    if (Math.abs(this._targetAngle.y - this._curAngle_2.y) > 180) {\n                        if (this._targetAngle.y > this._curAngle_2.y) {\n                            this._targetAngle.y -= 360;\n                        } else {\n                            this._targetAngle.y += 360;\n                        }\n                    }\n\n                    // console.log(\"this._targetAngle.y\", this._targetAngle.y);\n            } else {\n                this.isPlayRotate = false;\n                this.node.eulerAngles = v3_0;\n            }\n\n            if (!this.isMoving) {\n                return;\n            }\n\n            this.scriptCharacterRigid.move(this._rotateDirection.x * this.curMoveSpeed * 0.5 * deltaTime, this._rotateDirection.z * this.curMoveSpeed * 0.5 * deltaTime);\n\n            if (!this.scriptPlayerModel.isRunning && !this.isDie) {\n                this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.RUN, true);\n            }\n        } else {\n            if (!this.isDie && !this.scriptPlayerModel.isIdle && !this.scriptPlayerModel.isAttacking) {\n                this.scriptPlayerModel.playAni(constant.PLAYER_ANI_TYPE.IDLE, true);\n                this.scriptCharacterRigid.stopMove();\n            }\n        }\n    }\n\n    //检查玩家和四周meshRenderer是否碰撞\n    // private _checkIsHitWall () {\n    //     let isHitObstacle = false;\n    //     let aabb1: geometry.AABB = this.meshComPlayer.model?.modelBounds as geometry.AABB;\n        \n    //     for (let i = 0; i < GameManager.arrMeshComAn.length; i++) {\n    //         const element = GameManager.arrMeshComAn[i];\n    //         let aabb2: geometry.AABB = element.model?.modelBounds as geometry.AABB;\n    //         let obb1: geometry.OBB = new geometry.OBB();\n    //         let obb2: geometry.OBB = new geometry.OBB();\n    //         obb1.halfExtents = aabb1.halfExtents;\n    //         obb2.halfExtents = aabb2.halfExtents;\n    //         obb1.translateAndRotate(this.meshComPlayer.node.worldMatrix, this.meshComPlayer.node.worldRotation, obb1);\n    //         obb2.translateAndRotate(element.node.worldMatrix, element.node.worldRotation, obb2);\n    //         console.log(geometry.intersect.obbWithOBB(obb1, obb2));  \n    //         isHitObstacle = Boolean(geometry.intersect.obbWithOBB(obb1, obb2));\n    //         if (isHitObstacle) {\n    //             break;\n    //         }\n    //     }\n    //     this._isHitObstacle = isHitObstacle;\n    // }\n}\n"]}