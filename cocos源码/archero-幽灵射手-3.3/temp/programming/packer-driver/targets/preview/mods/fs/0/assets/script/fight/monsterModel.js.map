{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/monsterModel.ts"],"names":["_decorator","Component","SkeletalAnimationComponent","AnimationClip","constant","GameManager","ccclass","property","MonsterModel","start","onFrameAttack","isNormalAttack","isGameOver","isGamePause","scriptMonster","releaseSkillToPlayer","playAni","aniType","isLoop","callback","pos","_aniType","aniComPlayer","play","isAniPlaying","_aniState","getState","wrapMode","WrapMode","Loop","Normal","MONSTER_ANI_TYPE","ATTACK","speed","gameSpeed","attackSpeedAddition","curAttackSpeed","ATTACK_1","ATTACK_2","RUN","curMoveSpeed","moveSpeedAddition","baseInfo","moveSpeed","IDLE","once","EventType","FINISHED","HIT"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, SkeletalAnimationComponent, SkeletalAnimationState, AnimationClip } from 'cc';\nimport { constant } from '../framework/constant';\nimport { GameManager } from './gameManager';\nimport { Monster } from './monster';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MonsterModel')\nexport class MonsterModel extends Component {\n    @property(SkeletalAnimationComponent)\n    public aniComPlayer: SkeletalAnimationComponent = null!;//动画播放组件\n\n    public isAniPlaying: Boolean = false;//当前动画是否正在播放\n    public scriptMonster: Monster = null!;\n\n    private _aniType: string = \"\";//动画类型\n    private _aniState: SkeletalAnimationState = null!;//动画播放状态\n\n    //是否正在跑\n     public get isRunning () {\n        return this._aniType === constant.MONSTER_ANI_TYPE.RUN && this.isAniPlaying;\n    }\n\n    //是否站立\n    public get isIdle () {\n        return this._aniType === constant.MONSTER_ANI_TYPE.IDLE && this.isAniPlaying;\n    }\n\n    //是否正在攻击\n    public get isAttacking () {\n        return (this._aniType === constant.MONSTER_ANI_TYPE.ATTACK  && this.isAniPlaying)\n            || (this._aniType === constant.MONSTER_ANI_TYPE.ATTACK_1 && this.isAniPlaying)\n            || (this._aniType === constant.MONSTER_ANI_TYPE.ATTACK_2  && this.isAniPlaying);\n    } \n\n    //是否正在受到攻击\n    public get isHitting () {\n        return this._aniType === constant.MONSTER_ANI_TYPE.HIT && this.isAniPlaying;;\n    } \n\n    start () {\n        // [3]\n    }\n\n    /**\n     * attack动画帧事件\n     * @returns \n     */\n    onFrameAttack (isNormalAttack: boolean = true) {\n        if (GameManager.isGameOver || GameManager.isGamePause) {\n            return;\n        }\n\n        this.scriptMonster.releaseSkillToPlayer(isNormalAttack);\n    }\n\n    /**\n     * 播放小怪动画\n     *\n     * @param {string} aniType 动画类型\n     * @param {boolean} [isLoop=false] 是否循环\n     * @param {Function} [callback] 回调函数\n     * @param {number} [pos] 调用播放动画的位置，方便用于测试\n     * @returns\n     * @memberof Player\n     */\n     public playAni (aniType: string, isLoop: boolean = false, callback?: Function, pos?: number) {\n        // console.log(\"monsterAniType\", aniType, \"curAni\", this._aniType, \"pos\", pos);\n\n        this._aniType = aniType;\n        this.aniComPlayer?.play(aniType);\n        this.isAniPlaying = true;\n\n        this._aniState = this.aniComPlayer?.getState(aniType) as SkeletalAnimationState;\n\n        if (this._aniState) {\n            if (isLoop) {\n                this._aniState.wrapMode = AnimationClip.WrapMode.Loop;    \n            } else {\n                this._aniState.wrapMode = AnimationClip.WrapMode.Normal;    \n            }\n\n            switch (aniType) {\n                case constant.MONSTER_ANI_TYPE.ATTACK:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case constant.MONSTER_ANI_TYPE.ATTACK_1:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case constant.MONSTER_ANI_TYPE.ATTACK_2:\n                    this._aniState.speed = GameManager.gameSpeed * GameManager.attackSpeedAddition * this.scriptMonster.curAttackSpeed;\n                    break;\n                case constant.MONSTER_ANI_TYPE.RUN:\n                    this._aniState.speed = GameManager.gameSpeed * (this.scriptMonster.curMoveSpeed * GameManager.moveSpeedAddition / this.scriptMonster.baseInfo.moveSpeed);\n                    break;\n                case constant.MONSTER_ANI_TYPE.IDLE:\n                    this._aniState.speed = GameManager.gameSpeed;\n                    break;\n                default:\n                    this._aniState.speed = GameManager.gameSpeed;\n                    break;\n            }\n        }\n\n        if (!isLoop) {\n            this.aniComPlayer.once(SkeletalAnimationComponent.EventType.FINISHED, ()=>{\n                this.isAniPlaying = false;\n                callback && callback();\n            })\n        }\n    }\n\n}"]}