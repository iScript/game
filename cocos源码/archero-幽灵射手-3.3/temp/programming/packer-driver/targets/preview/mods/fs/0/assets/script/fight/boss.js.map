{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/boss.ts"],"names":["Node","ParticleSystemComponent","Vec3","_decorator","AnimationComponent","Material","MeshRenderer","Monster","clientEvent","uiManager","constant","EffectManager","poolManager","GameManager","resourceUtil","JetFires","MonsterModel","EnergyBall","FireBall","Dispersion","Tornado","FireBallBig","DispersionSurround","Laser","AudioManager","CharacterRigid","util","ccclass","property","Boss","onEnable","on","EVENT_TYPE","MONSTER_MOVE","_monsterMove","onDisable","off","init","baseInfo","layerInfo","_bloodTipOffsetPos","set","_hitEffectPos","isDie","scriptMonsterModel","node","getChildByName","getComponent","playAni","MONSTER_ANI_TYPE","IDLE","scriptCharacterRigid","_isAllowToAttack","_isSkillReleasing","_countdown","recycleWarning","_refreshSkill","scriptMonster","curAttackSpeed","attackSpeed","curMoveSpeed","moveSpeed","meshDragon","setMaterial","matDragon","_movePattern","movePattern","_getMinLength","refreshBlood","bloodNum","tipType","dispatchEvent","REFRESH_BOSS_BLOOD","instance","showBloodTips","showDie","stopMove","showRewardBounce","goldNum","heartDropRate","Math","random","scriptPlayer","isBloodthirsty","curHpLimit","addBlood","DIE","ndBoss","putNode","playAttackAni","releaseSkillToPlayer","isNormalAttack","negate","_forWard","attackForward","forward","allSkillInfo","length","offsetLength","getTwoNodeXZLength","ndPlayer","_minLength","_minLengthRatio","reduceBlood","skillInfo","ID","MONSTER_SKILL","JET_FIRES","loadEffectRes","resName","then","prefab","isMoving","ndMonsterSkill","getNode","ndGameManager","setWorldPosition","worldPosition","x","z","negative","scriptSkillCollider","ENERGY_BALL","FIRE_BALL","DISPERSION","children","forEach","ndChild","idx","TORNADO","FIRE_BALL_BIG","DISPERSION_SURROUND","LASER","ndSocketDragonHead","eulerAngles","_oriSkillEuler","active","playTrail","playSound","SOUND","JET_FIRE","arrParticle","getComponentsInChildren","element","simulationSpeed","clear","stop","play","aniCom","aniState","aniName","defaultClip","name","getState","time","sample","speed","gameSpeed","once","EventType","FINISHED","scriptWarning","hideWarning","setTimeout","changeDragonMat","matDragonHit","lateUpdate","deltaTime"],"mappings":"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","sourcesContent":["import { Monster } from './monster';\nimport { clientEvent } from './../framework/clientEvent';\nimport { uiManager } from './../framework/uiManager';\nimport { Node, ParticleSystemComponent, Vec3, _decorator, AnimationComponent, AnimationState, Material, MeshColliderComponent, MeshRenderer } from 'cc';\nimport { constant } from '../framework/constant';\nimport { EffectManager } from '../framework/effectManager';\nimport { poolManager } from '../framework/poolManager';\nimport { GameManager } from './gameManager';\nimport { resourceUtil } from '../framework/resourceUtil';\nimport { JetFires } from './monsterSkill/jetFires';\nimport { MonsterModel } from './monsterModel';\nimport { EnergyBall } from './monsterSkill/energyBall';\nimport { FireBall } from './monsterSkill/fireBall';\nimport { Dispersion } from './monsterSkill/dispersion';\nimport { Tornado } from './monsterSkill/tornado';\nimport { FireBallBig } from './monsterSkill/fireBallBig';\nimport { DispersionSurround } from './monsterSkill/dispersionSurround';\nimport { Laser } from './monsterSkill/laser';\nimport { AudioManager } from '../framework/audioManager';\nimport { CharacterRigid } from './characterRigid';\nimport { util } from '../framework/util';\nconst { ccclass, property } = _decorator;\n//大龙boss组件, 继承monster怪物组件\n@ccclass('Boss')\nexport class Boss extends Monster {\n    @property(Node)\n    public ndSocketDragonHead: Node = null!;//龙头    \n\n    @property(Material)\n    public matDragon: Material = null!;//大龙默认材质\n\n    @property(Material)\n    public matDragonHit: Material = null!;//大龙受击后材质变白\n\n    @property(MeshRenderer)\n    public meshDragon: MeshRenderer = null!;\n\n    private _countdown: number = 0.2;//闪白倒计时\n    private _oriSkillEuler: Vec3 = new Vec3();//技能默认角度\n    private _isSkillReleasing: boolean = false;//是否正在释放技能 \n\n    onEnable () {\n        clientEvent.on(constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n    }\n\n    onDisable () {\n        clientEvent.off(constant.EVENT_TYPE.MONSTER_MOVE, this._monsterMove, this);\n    }\n\n    public init(baseInfo: any, layerInfo: any) {\n        this._bloodTipOffsetPos.set(0, 50, 0);\n        this._hitEffectPos.set(0, 0.04, 0);\n\n        this.baseInfo = baseInfo;\n        this.layerInfo = layerInfo;\n        this.isDie = false;\n\n        this.scriptMonsterModel = this.node.getChildByName(\"body\")?.getComponent(MonsterModel) as MonsterModel;\n        this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.IDLE, true);\n        this.scriptCharacterRigid = this.node.getComponent(CharacterRigid) as CharacterRigid;\n\n        this._isAllowToAttack = false;\n        this._isSkillReleasing = false;\n        this._countdown = 0.2;\n        \n        this.recycleWarning();\n        this._refreshSkill();\n\n        this.scriptMonsterModel.scriptMonster = this;\n\n        this.curAttackSpeed = this.baseInfo.attackSpeed;\n        this.curMoveSpeed = this.baseInfo.moveSpeed;\n\n        this.meshDragon?.setMaterial(this.matDragon, 0);\n\n        this._movePattern = layerInfo.movePattern ? layerInfo.movePattern : this.baseInfo.movePattern;\n\n        super._getMinLength();\n    }\n\n    public refreshBlood (bloodNum: number, tipType: number) {\n        clientEvent.dispatchEvent(constant.EVENT_TYPE.REFRESH_BOSS_BLOOD, bloodNum);\n        uiManager.instance.showBloodTips(this, tipType, bloodNum, this._bloodTipOffsetPos);\n    }\n\n    public showDie () {\n        this.scriptCharacterRigid.stopMove();\n\n        EffectManager.instance.showRewardBounce(this.node, \"gold/gold\", this.baseInfo.goldNum, ()=>{\n            if (this.baseInfo.heartDropRate >= Math.random()) {\n                EffectManager.instance.showRewardBounce(this.node, \"heart/heart\", 1);\n            }\n        });\n\n        //检查玩家是否拥有嗜血技能：主角击杀敌人时回复自身生命上限2%的生命值。\n        if (GameManager.scriptPlayer.isBloodthirsty) {\n            let bloodNum = GameManager.scriptPlayer.curHpLimit * 0.02;\n            GameManager.scriptPlayer.addBlood(bloodNum);\n        }\n\n        this.scriptMonsterModel.playAni(constant.MONSTER_ANI_TYPE.DIE, false, ()=>{\n            if (this.isDie) {\n                GameManager.ndBoss = null!;\n                poolManager.instance.putNode(this.node);\n            }\n        });\n    }\n\n    public playAttackAni () {\n        super.playAttackAni();\n        \n        this._isSkillReleasing = false;\n    }\n\n    /**\n     * 向玩家释放技能\n     *\n     * @param {boolean} [isNormalAttack=false] 是否是普通攻击、反之喷火\n     * @return {*} \n     * @memberof Boss\n     */\n    public releaseSkillToPlayer (isNormalAttack: boolean = false) {\n        if (this._isSkillReleasing) {\n            return;\n        }\n\n        // this.node.forward = Vec3.subtract(this._forWard, GameManager.ndPlayer.worldPosition, this.node.worldPosition).normalize();\n        Vec3.negate(this._forWard, this.attackForward);\n        this.node.forward = this._forWard;\n        //boss是非近战的怪物，必须带技能，这里做个容错\n        if (!this.allSkillInfo.length) {\n            let offsetLength = util.getTwoNodeXZLength(this.node, GameManager.ndPlayer);\n            if (offsetLength <= this._minLength * this._minLengthRatio) {\n                GameManager.scriptPlayer.reduceBlood(this.baseInfo);\n            }\n            return;\n        }\n\n        if (isNormalAttack && this.skillInfo.ID !== constant.MONSTER_SKILL.JET_FIRES) {\n            this._isSkillReleasing = true;\n\n            resourceUtil.loadEffectRes(`${this.skillInfo.resName}/${this.skillInfo.resName}`).then((prefab: any)=>{\n                if (this.isMoving) {\n                    return;\n                }\n    \n                let ndMonsterSkill = poolManager.instance.getNode(prefab, GameManager.ndGameManager as Node) as Node;\n                ndMonsterSkill.setWorldPosition(this.node.worldPosition.x, 2.5, this.node.worldPosition.z);\n                ndMonsterSkill.forward = this.attackForward.negative();\n                \n                let scriptSkillCollider: any = null!;\n                //怪物技能初始化\n                switch (this.skillInfo.ID) {\n                    case constant.MONSTER_SKILL.ENERGY_BALL:\n                        scriptSkillCollider = ndMonsterSkill.getComponent(EnergyBall) as EnergyBall;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                        break;\n                    case constant.MONSTER_SKILL.FIRE_BALL: \n                        scriptSkillCollider = ndMonsterSkill.getComponent(FireBall) as FireBall;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                        break;\n                    case constant.MONSTER_SKILL.DISPERSION:\n                        ndMonsterSkill.children.forEach((ndChild: Node, idx: number)=>{\n                            let scriptSkillCollider = ndChild.getComponent(Dispersion) as Dispersion;\n                            scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                        })\n                        break;\n                    case constant.MONSTER_SKILL.TORNADO: \n                        scriptSkillCollider = ndMonsterSkill.getComponent(Tornado) as Tornado;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                        break;\n                    case constant.MONSTER_SKILL.FIRE_BALL_BIG:\n                        scriptSkillCollider = ndMonsterSkill.getComponent(FireBallBig) as FireBallBig;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                        break;\n                    case constant.MONSTER_SKILL.DISPERSION_SURROUND:\n                        ndMonsterSkill.children.forEach((ndChild: Node)=>{\n                            let scriptSkillCollider = ndChild.getComponent(DispersionSurround) as DispersionSurround;\n                            scriptSkillCollider.init(this.skillInfo, this.baseInfo);\n                        })\n                        break;\n                    case constant.MONSTER_SKILL.LASER:\n                        scriptSkillCollider = ndMonsterSkill.getComponent(Laser) as Laser;\n                        scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n                        break;\n                }\n    \n                this._refreshSkill();\n            })\n        } else if (!isNormalAttack && this.skillInfo.ID === constant.MONSTER_SKILL.JET_FIRES) {\n            this._isSkillReleasing = true;\n\n            resourceUtil.loadEffectRes(`${this.skillInfo.resName}/${this.skillInfo.resName}`).then((prefab: any)=>{\n                if (this.isMoving) {\n                    return;\n                }\n    \n                let ndMonsterSkill = poolManager.instance.getNode(prefab,  this.ndSocketDragonHead) as Node;\n                ndMonsterSkill.eulerAngles = this._oriSkillEuler;\n\n                // ndMonsterSkill.forward = this.attackForward.negative();\n\n                let ndChild = ndMonsterSkill.getChildByName(\"boxCollider\") as Node;\n                ndChild.active = true;\n    \n                let scriptSkillCollider = ndMonsterSkill.getComponent(JetFires) as JetFires;\n                EffectManager.instance.playTrail(ndMonsterSkill);\n                scriptSkillCollider.init(this.skillInfo, this.baseInfo, this);\n\n                AudioManager.instance.playSound(constant.SOUND.JET_FIRE);\n    \n                let arrParticle: ParticleSystemComponent[]= ndMonsterSkill.getComponentsInChildren(ParticleSystemComponent);\n                arrParticle.forEach((element:ParticleSystemComponent)=>{\n                    element.simulationSpeed = 1;\n                    element?.clear();\n                    element?.stop();\n                    element?.play();\n                })\n    \n                //播放触发器动画            \n                let aniCom = ndMonsterSkill.getComponent(AnimationComponent) as AnimationComponent;\n                let aniState: AnimationState;\n                let aniName = aniCom.defaultClip?.name;\n                if (aniName) {\n                    aniCom.getState(aniName).time = 0;\n                    aniCom.getState(aniName).sample();\n                    aniCom.play();    \n    \n                    aniState = aniCom.getState(aniName);\n                    aniState.speed = GameManager.gameSpeed;\n                }\n    \n                aniCom.once(AnimationComponent.EventType.FINISHED, ()=>{\n                    ndChild.active = false;\n                })\n    \n                this.scriptWarning?.hideWarning();   \n                \n                setTimeout(()=>{\n                    poolManager.instance.putNode(ndMonsterSkill);\n                }, 4000)  \n\n                this._refreshSkill();\n            })\n        }\n        \n    }\n\n    /**\n     * 先移动\n     *\n     * @private\n     * @memberof Monster\n     */\n    public _monsterMove () {\n        super._monsterMove();\n    }\n\n    /**\n     * 大龙受击打后闪白效果\n     *\n     * @memberof Boss\n     */\n    public changeDragonMat () {\n        if (this._countdown <= 0) {\n            this.meshDragon?.setMaterial(this.matDragonHit, 0);\n            this._countdown = 0.2;\n        }\n    }\n\n    lateUpdate (deltaTime: number) {\n        if (this._countdown > 0) {\n            this._countdown -= deltaTime;\n\n            if (this._countdown <= 0) {\n                this.meshDragon?.setMaterial(this.matDragon, 0);\n            }\n        }\n    }\n}\n"]}