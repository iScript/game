{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/utils/joystick.ts"],"names":["_decorator","Component","Node","Enum","UITransformComponent","Vec3","view","AudioManager","playerData","constant","GameManager","clientEvent","ccclass","property","TOUCH_TYPE","DEFAULT","FOLLOW","FOLLOW_ALWAYS","FOLLOW_DOT","DIRECTION_TYPE","FOUR","EIGHT","ALL","screenHeight","getVisibleSize","height","Joystick","type","displayName","start","instance","playerInfo","level","ndTip","active","onEnable","node","on","EventType","TOUCH_START","_touchStartEvent","TOUCH_MOVE","_touchMoveEvent","TOUCH_END","_touchEndEvent","TOUCH_CANCEL","onDisable","off","isMoving","ndDot","setPosition","_oriDotPos","ndRing","_oriRingPos","event","_targetRingPos","touch","getUILocation","_touchStartLocation","set","x","y","touchPos","getComponent","convertToNodeSpaceAR","length","getPosition","_stickPos","_isOutInnerSize","isFollowStart","distance","width","contentSize","radius","_updateAngle","touchType","_touchMoveLocation","innerSize","isGameStart","resumeAll","dispatchEvent","EVENT_TYPE","MONSTER_MOVE","_currentTime","_checkInterval","rate","Number","toFixed","radian","Math","atan2","cos","sin","_movePos","_curRingPos_2","ringPos","_distanceRate","onClickCb","_touchEndLocation","isDragToInner","onEndCb","pos","_angle","round","PI","reset","update","deltaTime","isGameOver","isGamePause","scriptPlayer","_curRingPos_1","lerp","position","angle","_oldAngle","playAction","action","PLAYER_ACTION","MOVE","value","STOP_MOVE","v"],"mappings":"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","sourcesContent":["import { AudioManager } from './../framework/audioManager';\nimport { playerData } from './../framework/playerData';\nimport { constant } from './../framework/constant';\nimport { GameManager } from './../fight/gameManager';\nimport { _decorator, Component, Node, Enum, EventTouch, UITransformComponent, Vec3, view } from \"cc\";\nimport { clientEvent } from '../framework/clientEvent';\nconst { ccclass, property } = _decorator;\n\n//触摸类型\nconst TOUCH_TYPE = Enum({\n    DEFAULT: 0,//按钮和背景距离不变，背景位置与触碰点一致，不可改变按钮背景位置，按钮背景随着按钮移动而移动，松手后无法恢复到初始位置\n    FOLLOW: 1,//按钮和背景距离不变，背景位置与触碰点一致，不可改变按钮背景位置，按钮背景随着按钮移动而移动，松手后恢复到初始位置\n    FOLLOW_ALWAYS: 2, //按钮和背景距离不变，背景位置与触碰点一致，可改变按钮背景位置，按钮背景随着按钮移动而移动，松手后恢复到初始位置\n    FOLLOW_DOT: 3 //按钮和背景距离可改变，按钮位置与触碰点可不一致，不可改变按钮背景位置，按钮背景不随着按钮移动而移动，松手后恢复到初始位置\n});\n\n//方向\nconst DIRECTION_TYPE = Enum({\n    FOUR: 4,\n    EIGHT: 8,\n    ALL: 0,\n});\n\nconst screenHeight = view.getVisibleSize().height;//屏幕可视范围高度\n\n@ccclass(\"Joystick\")\nexport class Joystick extends Component {\n    @property({type: Node, displayName: '摇杆背景节点'})\n    public ndRing: Node = null!;\n\n    @property({type: Node, displayName: '摇杆节点'})\n    public ndDot: Node = null!;\n\n    @property({type: TOUCH_TYPE, displayName: '触摸类型'})\n    public touchType = TOUCH_TYPE.DEFAULT;\n\n    @property({type: DIRECTION_TYPE, displayName: '方向类型'})\n    public directionType = DIRECTION_TYPE.ALL;\n\n    @property({displayName: '启动半透明'})\n    public isEnableTransparent: boolean = false;\n\n    @property({displayName: '点击跟随'})\n    public isFollowStart: boolean = false;\n\n    @property({displayName: '内圈大小'})\n    public innerSize: number = 10;\n\n    @property(Node)\n    public ndTip: Node = null!;//第一关文字提示\n\n    public onClickCb: Function = null!;\n    public onEndCb: Function = null!;\n    public clearFECb: Function = null!;\n    public onBeginFECb: Function = null!;\n    public onSuccessFECb: Function = null!;\n    public isMoving: boolean = false;//是否正在移动\n\n    public get distanceRate () {\n        return this._distanceRate;\n    }\n\n    public get angle () {\n        return this._angle;\n    }\n\n    public set angle (v: number) {\n        this._angle = v;\n    }\n\n    private _angle: number = 0;//当前的角度\n    private _stickPos: Vec3 = new Vec3();\n    private _oriRingPos: Vec3 = new Vec3();//圆圈初始位置\n    private _targetRingPos: Vec3 = new Vec3();//圆圈背景位置\n    private _touchStartLocation: Vec3 = new Vec3();//开始触碰位置\n    private _touchMoveLocation: Vec3 = new Vec3();//移动触碰位置\n    private _touchEndLocation: Vec3 = new Vec3();//结束触碰位置\n    private _isOutInnerSize: Boolean = false;//终点拖动的点是否超出按钮圆圈背景\n    private _distanceRate: number = 0; //遥感移动距离比\n    private _checkInterval: number = 0.04;//每40ms刷新一次\n    private _oldAngle: number = 0;//之前的角度\n    private _currentTime: number = 0;//当前累积时间\n    private _oriDotPos: Vec3 = new Vec3();//中间按钮初始坐标\n    private _movePos: Vec3 = new Vec3();//移动坐标\n    private _curRingPos_1: Vec3 = new Vec3();//当前圆圈坐标\n    private _curRingPos_2: Vec3 = new Vec3();//\n\n    start () {\n        // Your initialization goes here.\n\n        if (playerData.instance.playerInfo.level > 1 && this.ndTip.active) {\n            this.ndTip.active = false;\n        }\n    }\n\n    onEnable () {\n        this.node.on(Node.EventType.TOUCH_START, this._touchStartEvent, this);\n        this.node.on(Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);\n\n        // 触摸在圆圈内离开或在圆圈外离开后，摇杆归位，player速度为0\n        this.node.on(Node.EventType.TOUCH_END, this._touchEndEvent, this);\n        this.node.on(Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);\n    }\n\n    onDisable () {\n        this.node.off(Node.EventType.TOUCH_START, this._touchStartEvent, this);\n        this.node.off(Node.EventType.TOUCH_MOVE, this._touchMoveEvent, this);\n\n        // 触摸在圆圈内离开或在圆圈外离开后，摇杆归位，player速度为0\n        this.node.off(Node.EventType.TOUCH_END, this._touchEndEvent, this);\n        this.node.off(Node.EventType.TOUCH_CANCEL, this._touchEndEvent, this);\n\n        //重置\n        this.isMoving = false;\n        this.ndDot.setPosition(this._oriDotPos);\n        this.ndRing.setPosition(this._oriRingPos);\n    }\n\n    private _touchStartEvent (event: EventTouch) {\n        // 记录触摸的世界坐标，给touch move使用\n        // this.dot.opacity = 255;\n        this._targetRingPos = null!;\n\n        let touch = event.getUILocation();\n        this._touchStartLocation.set(touch.x, touch.y, 0);\n        let touchPos = this.node.getComponent(UITransformComponent)?.convertToNodeSpaceAR(this._touchStartLocation) as Vec3;\n\n        if (this._oriRingPos.length() === 0) {\n            this._oriRingPos = this.ndRing.getPosition();\n        }\n\n        // 记录摇杆位置，给touch move使用\n        this._stickPos.set(touchPos);\n\n        this._isOutInnerSize = false;\n\n        if (!this.isFollowStart) {\n            touchPos = this.ndRing.getComponent(UITransformComponent)?.convertToNodeSpaceAR(this._touchStartLocation) as Vec3;\n\n            //触摸点与圆圈中心的距离\n            let distance = touchPos.length();\n            let width = this.ndRing.getComponent(UITransformComponent)?.contentSize.width as number;\n            //圆圈半径\n            let radius = width / 2;\n            \n            //手指在圆圈内触摸,控杆跟随触摸点\n            if (radius > distance) {\n                this.ndDot.setPosition(touchPos);\n                this._updateAngle(touchPos);\n                return true;\n            }\n            return false;\n\n        } else  {\n            //设置遥感可移动范围\n            if (this.touchType === TOUCH_TYPE.FOLLOW) {\n                touchPos.y = touchPos.y >= -screenHeight/6 ? -screenHeight/6 : touchPos.y;\n            } \n\n            this.ndRing.setPosition(touchPos);\n        }\n    }\n\n    private _touchMoveEvent (event: EventTouch) {\n        let touch = event.getUILocation();\n        this._touchMoveLocation.set(touch.x, touch.y, 0);\n        let touchPos = this.ndRing.getComponent(UITransformComponent)?.convertToNodeSpaceAR(this._touchMoveLocation) as Vec3;\n\n        // if (this.touchType === TOUCH_TYPE.FOLLOW) {\n        //     let offsetPos = cc.v3(touchPos.x - this._stickPos.x, touchPos.y - this._stickPos.y, 0);\n        //     touchPos = offsetPos;\n        // }\n\n        let distance = touchPos.length();\n\n        if (distance > this.innerSize) {\n            this.isMoving = true;\n            this._isOutInnerSize = true;\n        } else {\n            this._isOutInnerSize = false;\n        }\n\n        //有拖动且有角度才视为开始游戏\n        if (!GameManager.isGameStart && this.isMoving) {\n            GameManager.isGameStart = true;\n            AudioManager.instance.resumeAll();\n            \n            clientEvent.dispatchEvent(constant.EVENT_TYPE.MONSTER_MOVE);\n\n            if (this.ndTip.active) {\n                this.ndTip.active = false;\n            }\n\n            this._currentTime = this._checkInterval;\n        }\n\n        let width = this.ndRing.getComponent(UITransformComponent)?.contentSize.width as number;\n        //圆圈半径\n        let radius = width / 2;\n        let rate = 0;\n        // 由于摇杆的postion是以父节点为锚点，所以定位要加上ring和dot当前的位置(stickX,stickY)\n        if (radius > distance) {\n            rate = Number((distance / radius).toFixed(3));\n            this.ndDot.setPosition(touchPos);\n        }\n        else if (this.touchType !== TOUCH_TYPE.FOLLOW_DOT) {\n            rate = 1;\n            //控杆永远保持在圈内，并在圈内跟随触摸更新角度\n            let radian = Math.atan2(touchPos.y, touchPos.x);\n            \n            let x = Math.cos(radian) * radius;\n            let y = Math.sin(radian) * radius;\n            this._movePos.set(x, y, 0);\n            if (this.touchType === TOUCH_TYPE.FOLLOW_ALWAYS) {\n                this._curRingPos_2.set(touch.x - x, touch.y - y, 0);\n                let ringPos = this.node.getComponent(UITransformComponent)?.convertToNodeSpaceAR(this._curRingPos_2) as Vec3;\n                this._targetRingPos = ringPos;\n            }\n\n            this.ndDot.setPosition(this._movePos);\n        } else { \n            // 点跟随移动\n            this.ndDot.setPosition(touchPos);\n        }\n        //更新角度\n        this._updateAngle(touchPos);\n        //更新遥感移动距离百分比\n        this._distanceRate = rate;\n    }\n\n    private _touchEndEvent (event: EventTouch) {\n        if (!this.isMoving) {\n            //可以判断为点击\n            this.onClickCb && this.onClickCb();\n        } else {\n            let touch = event.getUILocation();\n            this._touchEndLocation.set(touch.x, touch.y, 0);\n            let touchPos = this.ndRing.getComponent(UITransformComponent)?.convertToNodeSpaceAR(this._touchEndLocation) as Vec3;\n            let isDragToInner = false;\n            if (touchPos.length() < this.innerSize) {\n                //取消掉\n                isDragToInner = true;\n                \n                this.onEndCb && this.onEndCb(isDragToInner);\n                \n            } else {\n                this.onEndCb && this.onEndCb(isDragToInner);\n            }\n        }\n\n        this.isMoving = false;\n        this.ndDot.setPosition(this._oriDotPos);\n\n        if (this.touchType === TOUCH_TYPE.FOLLOW || this.touchType === TOUCH_TYPE.FOLLOW_ALWAYS || this.touchType === TOUCH_TYPE.FOLLOW_DOT) {\n            this._targetRingPos = null!;\n            this.ndRing.setPosition(this._oriRingPos);\n        }\n    }\n\n    private _updateAngle (pos: Vec3) {\n        this._angle = Math.round(Math.atan2(pos.y, pos.x) * 180 / Math.PI);\n        return this._angle;\n    }\n\n    public reset () {\n        this.isMoving = false;\n        this.ndDot.setPosition(this._oriDotPos);\n    }\n\n    update (deltaTime: number) {\n        // Your update function goes here.\n\n        if (!GameManager.isGameStart || GameManager.isGameOver || GameManager.isGamePause || !GameManager.scriptPlayer) {\n            return;\n        }\n\n        //设置终终点按钮位置\n        if (this._targetRingPos) {\n            this._curRingPos_1.set(0, 0, 0);\n            Vec3.lerp(this._curRingPos_1, this.ndRing.position, this._targetRingPos, 20 * deltaTime);\n\n            this.ndRing.setPosition(this._curRingPos_1);\n        }\n\n        this._currentTime += deltaTime;\n        \n        if (this._currentTime >= this._checkInterval) {\n            this._currentTime = 0;\n\n            if (this.isMoving) {\n                if (this.angle !== this._oldAngle) {\n                    this._oldAngle = this.angle;\n                    GameManager.scriptPlayer.playAction({action: constant.PLAYER_ACTION.MOVE, value: this.angle});\n                }\n            } else {\n                this.isMoving = false;\n                if (GameManager.scriptPlayer.isMoving) {\n                    GameManager.scriptPlayer.playAction({action: constant.PLAYER_ACTION.STOP_MOVE});\n                }\n            }\n        }\n    }\n}\n"]}