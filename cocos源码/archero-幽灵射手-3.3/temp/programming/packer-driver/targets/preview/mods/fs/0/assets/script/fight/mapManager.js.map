{"version":3,"sources":["file:///Users/ykq/Downloads/archero/assets/script/fight/mapManager.ts"],"names":["_decorator","Component","Node","Vec3","constant","Monster","Boss","localConfig","poolManager","resourceUtil","GameManager","clientEvent","AudioManager","ccclass","property","MapManager","onEnable","on","EVENT_TYPE","SHOW_WARP_GATE","_showWarpGate","HIDE_WARP_GATE","_hideWarpGate","onDisable","off","start","buildMap","mapName","progressCb","completeCb","_completeListener","_dictModuleType","_arrItem","_arrMap","instance","getTableArr","concat","cb","startsWith","_ndAn","active","_ndAnS","isMapAnS","i","length","item","baseInfo","queryByID","ID","hasOwnProperty","type","push","arrPromise","_buildModel","Promise","all","then","console","log","e","error","_ndCloud","loadModelRes","prefab","getNode","node","parent","resolve","reject","objItems","idx","layerInfo","modelPath","resName","p","parentName","ndParent","getChildByName","ndChild","position","split","angle","scale","setPosition","Number","eulerAngles","setScale","BASE_TYPE","MONSTER","scriptMonster","getComponent","init","arrMonster","BOSS","ndBoss","scriptBoss","NPC","existentNum","HEART","recycle","index","element","_recycleModel","removeAllChildren","ndItem","putNode","playSound","SOUND","SHOW_WRAP_GATE","_ndWarpGate","setWorldPosition","_warpGateWorPos_1","_warpGateWorPos_2","pf"],"mappings":"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","sourcesContent":["import { constant } from './../framework/constant';\nimport { Monster } from './monster';\nimport { Boss } from './boss';\nimport { _decorator, Component, Node, Vec3, Game } from 'cc';\nimport { localConfig } from '../framework/localConfig';\nimport { poolManager } from '../framework/poolManager';\nimport { resourceUtil } from '../framework/resourceUtil';\nimport { GameManager } from './gameManager';\nimport { clientEvent } from '../framework/clientEvent';\nimport { AudioManager } from '../framework/audioManager';\nconst { ccclass, property } = _decorator;\n//\b关卡模型管理组件（怪物、爱心、障碍、npc）\n@ccclass('MapManager')\nexport class MapManager extends Component {\n    public _dictModuleType: any;//待加载的模块种类\n    public arrModuleData: any = {};//模块数据\n    public static isMapAnS: boolean = false;//是否是S型暗夜地图\n\n    private _ndAn: Node = null!;//默认暗夜地图节点\n    private _ndAnS: Node = null!;//S型暗夜地图节点\n    private _ndCloud: Node = null!;//云\n    private _warpGateWorPos_1: Vec3 = new Vec3(16.414, 1.635, -0.804);//an地图传送门位置\n    private _warpGateWorPos_2: Vec3 = new Vec3(34.61, 1.635, -20);//anS地图传送门位置\n    private _ndWarpGate: Node = null!//传送门\n    private _completeListener: Function = null!;//加载完成回调\n    private _arrItem: any = [];//存放各项模块节点信息, 除了道路,在玩家后面一定距离则进行回收\n    private _arrMap: any = [];//当前关卡数据表\n\n    onEnable () {\n        clientEvent.on(constant.EVENT_TYPE.SHOW_WARP_GATE, this._showWarpGate, this);\n        clientEvent.on(constant.EVENT_TYPE.HIDE_WARP_GATE, this._hideWarpGate, this);\n    }\n\n    onDisable () {\n        clientEvent.off(constant.EVENT_TYPE.SHOW_WARP_GATE, this._showWarpGate, this);\n        clientEvent.off(constant.EVENT_TYPE.HIDE_WARP_GATE, this._hideWarpGate, this);\n    }\n\n    start () {\n        // [3]\n    }\n\n    public buildMap (mapName: string, progressCb: Function, completeCb: Function) {\n        this._completeListener = completeCb;\n        this._dictModuleType = {};\n\n        this._arrItem = [];\n        this._arrMap = [];\n\n        this._arrMap = localConfig.instance.getTableArr(mapName).concat();\n\n        let cb = ()=>{\n            if (mapName.startsWith(\"map1\")) {\n                this._ndAn && (this._ndAn.active = false);\n                this._ndAnS && (this._ndAnS.active = true);\n                MapManager.isMapAnS = true;\n            } else {\n                this._ndAn && (this._ndAn.active = true);\n                this._ndAnS && (this._ndAnS.active = false);\n                MapManager.isMapAnS = false;\n            }\n            \n            for (let i = this._arrMap.length - 1; i >= 0; i--) {\n                const item = this._arrMap[i];\n                let baseInfo = localConfig.instance.queryByID('base',item.ID);\n                \n                if (!this._dictModuleType.hasOwnProperty(baseInfo.type)) {\n                    this._dictModuleType[baseInfo.type] = [];\n                }\n    \n                this._dictModuleType[baseInfo.type].push(item);\n            }\n    \n            let arrPromise = [];\n    \n            for (const i in this._dictModuleType) {\n                let item = this._dictModuleType[i];\n                if (item.length) {\n                    arrPromise.push(this._buildModel(i));               \n                }\n            }\n    \n            Promise.all(arrPromise).then(()=>{\n                this._completeListener && this._completeListener();\n                console.log(`load ${mapName} over`);\n            }).catch((e)=>{\n                console.error(\"load item module err\", e);\n            })\n        }\n\n        if (!this._ndCloud) {\n            resourceUtil.loadModelRes('scene/cloud').then((prefab: any)=>{\n                this._ndCloud = poolManager.instance.getNode(prefab, this.node.parent as Node);\n            })\n        }\n\n        if (mapName.startsWith(\"map0\") && !this._ndAn) {\n            resourceUtil.loadModelRes('scene/an').then((prefab: any)=>{\n                this._ndAn = poolManager.instance.getNode(prefab, this.node.parent as Node);\n                cb();\n            })\n        } else if (mapName.startsWith(\"map1\") && !this._ndAnS) {\n            resourceUtil.loadModelRes('scene/anS').then((prefab: any)=>{\n                this._ndAnS = poolManager.instance.getNode(prefab, this.node.parent as Node);\n                cb();\n            })\n        } else {\n            cb();\n        }\n    }\n\n    private _buildModel (type: string) {\n        return new Promise((resolve, reject)=>{\n            let arrPromise =  [];\n\n            let objItems = this._dictModuleType[type];//同类型的信息\n            this._dictModuleType[type] = [];\n\n            for (let idx = 0; idx < objItems.length; idx++) {\n                //怪物在该层级别的配置信息\n                let layerInfo = objItems[idx];\n                //怪物的模块数据\n                let baseInfo = localConfig.instance.queryByID(\"base\", layerInfo.ID);\n                let modelPath = `${type}/${baseInfo.resName}`;\n                let p = resourceUtil.loadModelRes(modelPath).then((prefab: any)=>{\n                    let parentName = type + 'Group';//先创建父节点\n                    let ndParent = this.node.getChildByName(parentName);\n    \n                    if (!ndParent) {\n                        ndParent = new Node(parentName);\n                        ndParent.parent = this.node;\n                    }\n\n                    let ndChild = poolManager.instance.getNode(prefab, ndParent) as Node;\n                    let position = layerInfo.position ? layerInfo.position.split(',') : baseInfo.position.split(',');\n                    let angle = layerInfo.angle ? layerInfo.angle.split(',') : baseInfo.angle.split(',');\n                    let scale = layerInfo.scale ? layerInfo.scale.split(',') : baseInfo.scale.split(',');\n                    ndChild.setPosition(new Vec3(Number(position[0]), Number(position[1]), Number(position[2])));\n                    ndChild.eulerAngles = new Vec3(Number(angle[0]), Number(angle[1]), Number(angle[2]));\n                    ndChild.setScale(new Vec3(Number(scale[0]), Number(scale[1]), Number(scale[2])));\n\n                    //test\n                    if (baseInfo.type === constant.BASE_TYPE.MONSTER) {\n                        let scriptMonster = ndChild?.getComponent(Monster) as Monster;\n                        scriptMonster.init(baseInfo, layerInfo);\n                        GameManager.arrMonster.push(ndChild);\n                    } else if (baseInfo.type === constant.BASE_TYPE.BOSS) {\n                        GameManager.ndBoss = ndChild;\n                        GameManager.scriptBoss = ndChild?.getComponent(Boss) as Boss;\n                        GameManager.scriptBoss.init(baseInfo, layerInfo);\n                    } else if (baseInfo.type === constant.BASE_TYPE.NPC) {\n                        GameManager.existentNum += 1;\n                    } else if (baseInfo.type === constant.BASE_TYPE.HEART) {\n                        GameManager.existentNum += 1;\n                    }\n                    \n                    this._arrItem.push(ndChild);\n                })\n\n                arrPromise.push(p);\n            }  \n\n            Promise.all(arrPromise).then(()=>{\n                resolve(null);\n            }).catch((e)=>{\n                console.error(\"e\", e);\n            })\n        })\n    }\n\n    /**\n     * 回收模块\n     */\n    public recycle () {\n        for (let index = 0; index < this._arrItem.length; index++) {\n            const element = this._arrItem[index];\n            this._recycleModel(element);\n        }\n        \n        this.node.removeAllChildren();\n    }\n\n    /**\n     * 回收子模块\n     * @param ndItem \n     */\n    private _recycleModel (ndItem: Node) {\n        poolManager.instance.putNode(ndItem);\n    }\n\n    /**\n     * 展示传送门\n     *\n     * @private\n     * @memberof GameManager\n     */\n     private _showWarpGate () {\n        let cb = ()=>{\n            AudioManager.instance.playSound(constant.SOUND.SHOW_WRAP_GATE);\n\n            if (this._ndAn && this._ndAn.active) {\n                this._ndWarpGate.setWorldPosition(this._warpGateWorPos_1);\n            } else {\n                this._ndWarpGate.setWorldPosition(this._warpGateWorPos_2);\n            }\n\n            this._ndWarpGate.active = true;\n        }\n\n        if (!this._ndWarpGate) {\n            resourceUtil.loadModelRes(`warpGate/warpGate`).then((pf: any)=>{\n                this._ndWarpGate = poolManager.instance.getNode(pf, this.node.parent as Node);\n                cb();\n            })\n        } else {\n            cb();\n        }\n    }\n\n    /**\n     * 隐藏传送门\n     *\n     * @private\n     * @memberof GameManager\n     */\n    private _hideWarpGate () {\n        if (this._ndWarpGate) {\n            this._ndWarpGate.active = false;\n        }\n    }\n\n    // update (deltaTime: number) {\n    //     // [4]\n    // }\n}"]}